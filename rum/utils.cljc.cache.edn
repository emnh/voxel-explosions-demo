;; Analyzed by ClojureScript 1.8.40
{:name rum.utils, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {next-id {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/rum/utils.cljc", :line 4, :column 9, :end-line 4, :end-column 16, :arglists (quote ([]))}, :name rum.utils/next-id, :variadic false, :file "out.prod.client/rum/utils.cljc", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, collect {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/rum/utils.cljc", :line 7, :column 7, :end-line 7, :end-column 14, :arglists (quote ([fn-key classes]))}, :name rum.utils/collect, :variadic false, :file "out.prod.client/rum/utils.cljc", :end-column 14, :method-params ([fn-key classes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fn-key classes]))}, call-all {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/rum/utils.cljc", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([state fns & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(state fns args)], :arglists ([state fns & args]), :arglists-meta (nil)}}, :name rum.utils/call-all, :variadic true, :file "out.prod.client/rum/utils.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(state fns args)], :arglists ([state fns & args]), :arglists-meta (nil)}, :method-params [(state fns args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists ([state fns & args])}}}