;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name promesa.monad, :imports nil, :requires {m cats.core, cats.core cats.core, mc cats.context, cats.context cats.context, mp cats.protocols, cats.protocols cats.protocols, p promesa.core, promesa.core promesa.core}, :uses nil, :defs {promise-context {:name promesa.monad/promise-context, :file "out.prod.client/promesa/monad.cljc", :line 30, :column 1, :end-line 30, :end-column 30, :no-doc true, :meta {:file "/home/emh/public_html/github/rts/out.prod.client/promesa/monad.cljc", :line 30, :column 15, :end-line 30, :end-column 30, :no-doc true}}, t_promesa$monad23738 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Bifunctor cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative}, :name promesa.monad/t_promesa$monad23738, :file "out.prod.client/promesa/monad.cljc", :type true, :anonymous true, :column 3, :line 31, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_promesa$monad23738 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Bifunctor cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta23739])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Bifunctor cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative}, :name promesa.monad/->t_promesa$monad23738, :variadic false, :file "out.prod.client/promesa/monad.cljc", :method-params ([meta23739]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta23739])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {m cats.core, cats.core cats.core}, :cljs.analyzer/constants {:seen #{meta23739}, :order [meta23739]}, :doc "An optional cats integration."}