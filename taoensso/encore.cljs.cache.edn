;; Analyzed by ClojureScript 1.8.40
{:use-macros {have taoensso.encore, compile-if taoensso.encore, have! taoensso.encore, name-with-attrs taoensso.encore, -vol! taoensso.encore, -vol-reset! taoensso.encore, have? taoensso.encore, catch-errors* taoensso.encore, catch-errors taoensso.encore, -vol-swap! taoensso.encore}, :excludes #{}, :name taoensso.encore, :imports nil, :requires {goog.net.XhrIoPool goog.net.XhrIoPool, gevents goog.events, set clojure.set, cljs.tools.reader.edn cljs.tools.reader.edn, taoensso.truss taoensso.truss, goog.net.XhrIo goog.net.XhrIo, gquery-data goog.Uri.QueryData, goog.string goog.string, goog.Uri.QueryData goog.Uri.QueryData, gobj goog.object, goog.object goog.object, gxhr-pool goog.net.XhrIoPool, goog.string.StringBuffer goog.string.StringBuffer, truss taoensso.truss, goog.net.EventType goog.net.EventType, clojure.set clojure.set, goog.structs goog.structs, goog.string.format goog.string.format, gstructs goog.structs, str clojure.string, clojure.string clojure.string, cljs.reader cljs.reader, gstr goog.string, edn cljs.tools.reader.edn, goog.events goog.events, goog.net.ErrorCode goog.net.ErrorCode, gxhr goog.net.XhrIo}, :uses nil, :defs {encore-version {:name taoensso.encore/encore-version, :file "out.prod.client/taoensso/encore.cljs", :line 56, :column 1, :end-line 56, :end-column 32, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 56, :column 18, :end-line 56, :end-column 32}}, memoize-a1_ {:name taoensso.encore/memoize-a1_, :file "out.prod.client/taoensso/encore.cljs", :line 2420, :column 1, :end-line 2420, :end-column 17, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2420, :column 6, :end-line 2420, :end-column 17}}, removev {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2540, :column 7, :end-line 2540, :end-column 14, :arglists (quote ([pred coll]))}, :name taoensso.encore/removev, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2540, :end-line 2540, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, as-nzero {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 446, :column 7, :end-line 446, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-nzero, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 446, :end-line 446, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nneg-int? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 280, :column 9, :end-line 280, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nneg-int?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 280, :end-line 280, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, error? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 271, :column 12, :end-line 271, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/error?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ->?singleton {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 672, :column 7, :end-line 672, :end-column 19, :arglists (quote ([coll]))}, :name taoensso.encore/->?singleton, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 672, :end-line 672, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, set* {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 364, :column 7, :end-line 364, :end-column 11, :arglists (quote ([x]))}, :name taoensso.encore/set*, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 364, :end-line 364, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sayp {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2037, :column 9, :end-line 2037, :end-column 13, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/sayp, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2037, :end-line 2037, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, now-udt {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 597, :column 8, :end-line 597, :end-column 15, :arglists (quote ([]))}, :name taoensso.encore/now-udt, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 597, :end-line 597, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, as-?kw {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 386, :column 7, :end-line 386, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/as-?kw, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 386, :end-line 386, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, reduce-kvs {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 718, :column 9, :end-line 718, :end-column 19, :arglists (quote ([rf init kvs])), :doc "Like `reduce-kv` but takes a flat sequence of kv pairs"}, :name taoensso.encore/reduce-kvs, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([rf init kvs]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 718, :end-line 718, :max-fixed-arity 3, :fn-var true, :arglists (quote ([rf init kvs])), :doc "Like `reduce-kv` but takes a flat sequence of kv pairs"}, url-decode {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2279, :column 7, :end-line 2279, :end-column 17, :arglists (quote ([s & [encoding]])), :doc "Stolen from http://goo.gl/99NSR1", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists ([s & [encoding]]), :arglists-meta (nil)}}, :name taoensso.encore/url-decode, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [encoding])], :arglists ([s & [encoding]]), :arglists-meta (nil)}, :method-params [(s [encoding])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2279, :end-line 2279, :max-fixed-arity 1, :fn-var true, :arglists ([s & [encoding]]), :doc "Stolen from http://goo.gl/99NSR1"}, -swap-cache! {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1039, :column 8, :end-line 1039, :end-column 20, :private true, :arglists (quote ([atom_ k f])), :doc "Used by memoization utils"}, :private true, :name taoensso.encore/-swap-cache!, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 20, :method-params ([atom_ k f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1039, :end-line 1039, :max-fixed-arity 3, :fn-var true, :arglists (quote ([atom_ k f])), :doc "Used by memoization utils"}, str-builder? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1211, :column 7, :end-line 1211, :end-column 19, :arglists (quote ([x]))}, :name taoensso.encore/str-builder?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1211, :end-line 1211, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, every {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 711, :column 7, :end-line 711, :end-column 12, :arglists (quote ([pred coll]))}, :name taoensso.encore/every, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 711, :end-line 711, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, parse-query-params {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2310, :column 7, :end-line 2310, :end-column 25, :arglists (quote ([s & [keywordize? encoding]])), :doc "Based on `ring-codec/form-decode`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [keywordize? encoding])], :arglists ([s & [keywordize? encoding]]), :arglists-meta (nil)}}, :name taoensso.encore/parse-query-params, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(s [keywordize? encoding])], :arglists ([s & [keywordize? encoding]]), :arglists-meta (nil)}, :method-params [(s [keywordize? encoding])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2310, :end-line 2310, :max-fixed-arity 1, :fn-var true, :arglists ([s & [keywordize? encoding]]), :doc "Based on `ring-codec/form-decode`"}, dissoc-in {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 910, :column 7, :end-line 910, :end-column 16, :arglists (quote ([m ks dissoc-k] [m ks dissoc-k & more])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([m ks dissoc-k]), :arglists ([m ks dissoc-k] [m ks dissoc-k & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/dissoc-in, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([m ks dissoc-k]), :arglists ([m ks dissoc-k] [m ks dissoc-k & more]), :arglists-meta (nil nil)}, :method-params ([m ks dissoc-k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 910, :end-line 910, :max-fixed-arity 3, :fn-var true, :arglists ([m ks dissoc-k] [m ks dissoc-k & more])}, norm-word-breaks {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1409, :column 7, :end-line 1409, :end-column 23, :arglists (quote ([s])), :doc "Converts all word breaks of any form and length (including line breaks of any\n  form, tabs, spaces, etc.) to a single regular space"}, :name taoensso.encore/norm-word-breaks, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1409, :end-line 1409, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Converts all word breaks of any form and length (including line breaks of any\n  form, tabs, spaces, etc.) to a single regular space"}, rcompare {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 981, :column 14, :end-line 981, :end-column 22, :arglists (quote ([x y])), :doc "Reverse comparator"}, :name taoensso.encore/rcompare, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 22, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 981, :end-line 981, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Reverse comparator"}, Swapped {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name taoensso.encore/Swapped, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 1050, :record true, :end-line 1050, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, merge-meta {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 376, :column 7, :end-line 376, :end-column 17, :arglists (quote ([x m]))}, :name taoensso.encore/merge-meta, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([x m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 376, :end-line 376, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x m]))}, ms {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 600, :column 7, :end-line 600, :end-column 9, :arglists (quote ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}])), :doc "Returns ~number of milliseconds in period defined by given args", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :arglists-meta (nil)}}, :name taoensso.encore/ms, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :arglists-meta (nil)}, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 600, :end-line 600, :max-fixed-arity 0, :fn-var true, :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :doc "Returns ~number of milliseconds in period defined by given args"}, str-ends-with? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1339, :column 7, :end-line 1339, :end-column 21, :arglists (quote ([s substr]))}, :name taoensso.encore/str-ends-with?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 21, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1339, :end-line 1339, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, nested-merge {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1009, :column 7, :end-line 1009, :end-column 19, :arglists (quote ([& maps])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(maps)], :arglists ([& maps]), :arglists-meta (nil)}}, :name taoensso.encore/nested-merge, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(maps)], :arglists ([& maps]), :arglists-meta (nil)}, :method-params [(maps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1009, :end-line 1009, :max-fixed-arity 0, :fn-var true, :arglists ([& maps])}, rate-limited {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2452, :column 7, :end-line 2452, :end-column 19, :arglists (quote ([ncalls-limit window-ms f]))}, :name taoensso.encore/rate-limited, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([ncalls-limit window-ms f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2452, :end-line 2452, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ncalls-limit window-ms f]))}, format-query-string {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2287, :column 7, :end-line 2287, :end-column 26, :arglists (quote ([m]))}, :name taoensso.encore/format-query-string, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 26, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2287, :end-line 2287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, is! {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 430, :column 7, :end-line 430, :end-column 10, :arglists (quote ([x] [pred x] [pred x fail-?data])), :doc "Cheaper `have!` that provides less diagnostic info", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x] [pred x] [pred x fail-?data]), :arglists ([x] [pred x] [pred x fail-?data]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/is!, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x] [pred x] [pred x fail-?data]), :arglists ([x] [pred x] [pred x fail-?data]), :arglists-meta (nil nil nil)}, :method-params ([x] [pred x] [pred x fail-?data]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 430, :end-line 430, :max-fixed-arity 3, :fn-var true, :arglists ([x] [pred x] [pred x fail-?data]), :doc "Cheaper `have!` that provides less diagnostic info"}, log {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2034, :column 9, :end-line 2034, :end-column 12, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/log, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2034, :end-line 2034, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, nano-time {:name taoensso.encore/nano-time, :file "out.prod.client/taoensso/encore.cljs", :line 1958, :column 1, :end-line 1958, :end-column 15, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1958, :column 6, :end-line 1958, :end-column 15}}, clamp {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 539, :column 7, :end-line 539, :end-column 12, :arglists (quote ([nmin nmax n]))}, :name taoensso.encore/clamp, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([nmin nmax n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 539, :end-line 539, :max-fixed-arity 3, :fn-var true, :arglists (quote ([nmin nmax n]))}, memoized {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1560, :column 7, :end-line 1560, :end-column 15, :arglists (quote ([cache f & args])), :doc "Like `(memoize* f)` but takes an explicit cache atom (possibly nil)\n  and immediately applies memoized f to given arguments", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(cache f args)], :arglists ([cache f & args]), :arglists-meta (nil)}}, :name taoensso.encore/memoized, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(cache f args)], :arglists ([cache f & args]), :arglists-meta (nil)}, :method-params [(cache f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1560, :end-line 1560, :max-fixed-arity 2, :fn-var true, :arglists ([cache f & args]), :doc "Like `(memoize* f)` but takes an explicit cache atom (possibly nil)\n  and immediately applies memoized f to given arguments"}, uint? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 281, :column 13, :end-line 281, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/uint?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, as-pfloat {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 460, :column 7, :end-line 460, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-pfloat, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 460, :end-line 460, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, log? {:name taoensso.encore/log?, :file "out.prod.client/taoensso/encore.cljs", :line 2470, :column 3, :end-line 2470, :end-column 22, :private true, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2470, :column 18, :end-line 2470, :end-column 22, :private true}}, greatest {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2482, :column 7, :end-line 2482, :end-column 15, :arglists (quote ([coll & [?comparator]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name taoensso.encore/greatest, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2482, :end-line 2482, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]])}, -as-throw {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 442, :column 7, :end-line 442, :end-column 16, :arglists (quote ([as-name x]))}, :name taoensso.encore/-as-throw, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([as-name x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 442, :end-line 442, :max-fixed-arity 2, :fn-var true, :arglists (quote ([as-name x]))}, str-join {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1247, :column 9, :end-line 1247, :end-column 17, :arglists (quote ([coll] [separator coll] [separator xform coll])), :doc "Faster, transducer-based generalization of `clojure.string/join` with `xform`\n    support", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([coll] [separator coll] [separator xform coll]), :arglists ([coll] [separator coll] [separator xform coll]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/str-join, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([coll] [separator coll] [separator xform coll]), :arglists ([coll] [separator coll] [separator xform coll]), :arglists-meta (nil nil nil)}, :method-params ([coll] [separator coll] [separator xform coll]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 3, :line 1247, :end-line 1247, :max-fixed-arity 3, :fn-var true, :arglists ([coll] [separator coll] [separator xform coll]), :doc "Faster, transducer-based generalization of `clojure.string/join` with `xform`\n    support"}, merge-keywords {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 490, :column 7, :end-line 490, :end-column 21, :arglists (quote ([ks & [no-slash?]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [no-slash?])], :arglists ([ks & [no-slash?]]), :arglists-meta (nil)}}, :name taoensso.encore/merge-keywords, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [no-slash?])], :arglists ([ks & [no-slash?]]), :arglists-meta (nil)}, :method-params [(ks [no-slash?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 490, :end-line 490, :max-fixed-arity 1, :fn-var true, :arglists ([ks & [no-slash?]])}, queue* {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 940, :column 7, :end-line 940, :end-column 13, :arglists (quote ([& items])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(items)], :arglists ([& items]), :arglists-meta (nil)}}, :name taoensso.encore/queue*, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(items)], :arglists ([& items]), :arglists-meta (nil)}, :method-params [(items)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 940, :end-line 940, :max-fixed-arity 0, :fn-var true, :arglists ([& items])}, atom? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 272, :column 13, :end-line 272, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/atom?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, chan? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 248, :column 9, :end-line 248, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/chan?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 248, :end-line 248, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, keywordize-map {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2539, :column 7, :end-line 2539, :end-column 21, :arglists (quote ([m]))}, :name taoensso.encore/keywordize-map, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 21, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2539, :end-line 2539, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, subvec* {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 868, :column 7, :end-line 868, :end-column 14, :arglists (quote ([v start-idx & [?max-len]])), :doc "Like `subvec` but uses `sub-indexes`", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(v start-idx [?max-len])], :arglists ([v start-idx & [?max-len]]), :arglists-meta (nil)}}, :name taoensso.encore/subvec*, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(v start-idx [?max-len])], :arglists ([v start-idx & [?max-len]]), :arglists-meta (nil)}, :method-params [(v start-idx [?max-len])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 868, :end-line 868, :max-fixed-arity 2, :fn-var true, :arglists ([v start-idx & [?max-len]]), :doc "Like `subvec` but uses `sub-indexes`"}, logf {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2036, :column 9, :end-line 2036, :end-column 13, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/logf, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2036, :end-line 2036, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, reportf {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2480, :column 9, :end-line 2480, :end-column 16, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/reportf, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2480, :end-line 2480, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, str-?index {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1346, :column 7, :end-line 1346, :end-column 17, :arglists (quote ([s substr & [start-idx last?]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s substr [start-idx last?])], :arglists ([s substr & [start-idx last?]]), :arglists-meta (nil)}}, :name taoensso.encore/str-?index, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s substr [start-idx last?])], :arglists ([s substr & [start-idx last?]]), :arglists-meta (nil)}, :method-params [(s substr [start-idx last?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1346, :end-line 1346, :max-fixed-arity 2, :fn-var true, :arglists ([s substr & [start-idx last?]])}, as-?name {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 387, :column 7, :end-line 387, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?name, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 387, :end-line 387, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, udt? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 282, :column 14, :end-line 282, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/udt?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, as-kw {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 448, :column 7, :end-line 448, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/as-kw, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 448, :end-line 448, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, fatalf {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2479, :column 9, :end-line 2479, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/fatalf, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2479, :end-line 2479, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, distinct-elements? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 377, :column 7, :end-line 377, :end-column 25, :arglists (quote ([x]))}, :name taoensso.encore/distinct-elements?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 25, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 377, :end-line 377, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nneg? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 277, :column 13, :end-line 277, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nneg?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 277, :end-line 277, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, gc-now? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1504, :column 7, :end-line 1504, :end-column 14, :arglists (quote ([]))}, :name taoensso.encore/gc-now?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1504, :end-line 1504, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, as-pint {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 457, :column 7, :end-line 457, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-pint, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 457, :end-line 457, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, force-ref {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 301, :column 7, :end-line 301, :end-column 16, :arglists (quote ([x])), :doc "Like `force` for refs"}, :name taoensso.encore/force-ref, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Like `force` for refs"}, as-name {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 449, :column 7, :end-line 449, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-name, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 449, :end-line 449, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ajax-lite {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2079, :column 7, :end-line 2079, :end-column 16, :arglists (quote ([uri {:keys [method params headers timeout-ms resp-type with-credentials? progress-fn errorf], :as opts, :or {method :get, timeout-ms 10000, resp-type :auto, errorf logf}} callback])), :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-lite \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000\n     :with-credentials? false ; Enable if using CORS (requires xhr v2+)\n    }\n    (fn async-callback [resp-map]\n      (let [{:keys [success? ?status ?error ?content ?content-type]} resp-map]\n        ;; ?status  - 200, 404, ..., or nil on no response\n        ;; ?error   - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                  :timeout :no-content <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, :name taoensso.encore/ajax-lite, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([uri p__19907 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2079, :end-line 2079, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri {:keys [method params headers timeout-ms resp-type with-credentials? progress-fn errorf], :as opts, :or {method :get, timeout-ms 10000, resp-type :auto, errorf logf}} callback])), :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-lite \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000\n     :with-credentials? false ; Enable if using CORS (requires xhr v2+)\n    }\n    (fn async-callback [resp-map]\n      (let [{:keys [success? ?status ?error ?content ?content-type]} resp-map]\n        ;; ?status  - 200, 404, ..., or nil on no response\n        ;; ?error   - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                  :timeout :no-content <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, distinct-by {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2494, :column 7, :end-line 2494, :end-column 18, :arglists (quote ([keyfn coll])), :doc "Deprecated, prefer `xdistinct`"}, :name taoensso.encore/distinct-by, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([keyfn coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2494, :end-line 2494, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keyfn coll])), :doc "Deprecated, prefer `xdistinct`"}, as-uint {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 455, :column 7, :end-line 455, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-uint, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 455, :end-line 455, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nvec? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2541, :column 7, :end-line 2541, :end-column 12, :arglists (quote ([n x]))}, :name taoensso.encore/nvec?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([n x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2541, :end-line 2541, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n x]))}, path {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1405, :column 7, :end-line 1405, :end-column 11, :arglists (quote ([& parts])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(parts)], :arglists ([& parts]), :arglists-meta (nil)}}, :name taoensso.encore/path, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(parts)], :arglists ([& parts]), :arglists-meta (nil)}, :method-params [(parts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1405, :end-line 1405, :max-fixed-arity 0, :fn-var true, :arglists ([& parts])}, contains-in? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 909, :column 7, :end-line 909, :end-column 19, :arglists (quote ([coll ks]))}, :name taoensso.encore/contains-in?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([coll ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 909, :end-line 909, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll ks]))}, nil->sentinel {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 298, :column 9, :end-line 298, :end-column 22, :arglists (quote ([x]))}, :name taoensso.encore/nil->sentinel, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, filter-kvs {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 785, :column 7, :end-line 785, :end-column 17, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-kvs, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 785, :end-line 785, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, reduce-n {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 728, :column 9, :end-line 728, :end-column 17, :arglists (quote ([rf init n]))}, :name taoensso.encore/reduce-n, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([rf init n]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 728, :end-line 728, :max-fixed-arity 3, :fn-var true, :arglists (quote ([rf init n]))}, swap-in! {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1130, :column 7, :end-line 1130, :end-column 15, :arglists (quote ([atom_ f] [atom_ ks f] [atom_ ks f & more])), :doc "More powerful version of `swap!`:\n    * Supports optional `update-in` semantics.\n    * Swap fn can return `(swapped <new-val> <return-val>)` rather than just\n      <new-val>. This is useful when writing atomic pull fns, etc.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ f] [atom_ ks f]), :arglists ([atom_ f] [atom_ ks f] [atom_ ks f & more]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/swap-in!, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ f] [atom_ ks f]), :arglists ([atom_ f] [atom_ ks f] [atom_ ks f & more]), :arglists-meta (nil nil nil)}, :method-params ([atom_ f] [atom_ ks f]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1130, :end-line 1130, :max-fixed-arity 3, :fn-var true, :arglists ([atom_ f] [atom_ ks f] [atom_ ks f & more]), :doc "More powerful version of `swap!`:\n    * Supports optional `update-in` semantics.\n    * Swap fn can return `(swapped <new-val> <return-val>)` rather than just\n      <new-val>. This is useful when writing atomic pull fns, etc."}, warnf {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2477, :column 9, :end-line 2477, :end-column 14, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/warnf, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2477, :end-line 2477, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, memoize* {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1568, :column 7, :end-line 1568, :end-column 15, :arglists (quote ([f] [ttl-ms f] [cache-size ttl-ms f])), :doc "Like `clojure.core/memoize` but:\n    * Can be significantly faster (depends on opts)\n    * Uses delays to prevent race conditions on writes\n    * Supports auto invalidation & gc with `ttl-ms` option\n    * Supports cache size limit & gc with `cache-size` option\n    * Supports manual invalidation by prepending args with `:mem/del` or `:mem/fresh`", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/memoize*, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists-meta (nil nil nil)}, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1568, :end-line 1568, :max-fixed-arity 3, :fn-var true, :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :doc "Like `clojure.core/memoize` but:\n    * Can be significantly faster (depends on opts)\n    * Uses delays to prevent race conditions on writes\n    * Supports auto invalidation & gc with `ttl-ms` option\n    * Supports cache size limit & gc with `cache-size` option\n    * Supports manual invalidation by prepending args with `:mem/del` or `:mem/fresh`"}, as-?nemail {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 424, :column 7, :end-line 424, :end-column 17, :arglists (quote ([?s]))}, :name taoensso.encore/as-?nemail, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([?s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 424, :end-line 424, :max-fixed-arity 1, :fn-var true, :arglists (quote ([?s]))}, as-?email {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 423, :column 7, :end-line 423, :end-column 16, :arglists (quote ([?s]))}, :name taoensso.encore/as-?email, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([?s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 423, :end-line 423, :max-fixed-arity 1, :fn-var true, :arglists (quote ([?s]))}, spaced-str {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2431, :column 7, :end-line 2431, :end-column 17, :arglists (quote ([xs]))}, :name taoensso.encore/spaced-str, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2431, :end-line 2431, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, sentinel {:name taoensso.encore/sentinel, :file "out.prod.client/taoensso/encore.cljs", :line 292, :column 3, :end-line 292, :end-column 16, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 292, :column 8, :end-line 292, :end-column 16}}, merge-deep {:name taoensso.encore/merge-deep, :file "out.prod.client/taoensso/encore.cljs", :line 2413, :column 1, :end-line 2413, :end-column 16, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2413, :column 6, :end-line 2413, :end-column 16}}, join-once {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2437, :column 7, :end-line 2437, :end-column 16, :arglists (quote ([sep & coll])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(sep coll)], :arglists ([sep & coll]), :arglists-meta (nil)}}, :name taoensso.encore/join-once, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(sep coll)], :arglists ([sep & coll]), :arglists-meta (nil)}, :method-params [(sep coll)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2437, :end-line 2437, :max-fixed-arity 1, :fn-var true, :arglists ([sep & coll])}, a0-memoize_ {:name taoensso.encore/a0-memoize_, :file "out.prod.client/taoensso/encore.cljs", :line 2421, :column 1, :end-line 2421, :end-column 17, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2421, :column 6, :end-line 2421, :end-column 17}}, sb-append {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1221, :column 7, :end-line 1221, :end-column 16, :arglists (quote ([str-builder s] [str-builder s & more])), :doc "For cross-platform string building", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([str-builder s]), :arglists ([str-builder s] [str-builder s & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/sb-append, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([str-builder s]), :arglists ([str-builder s] [str-builder s & more]), :arglists-meta (nil nil)}, :method-params ([str-builder s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1221, :end-line 1221, :max-fixed-arity 2, :fn-var true, :arglists ([str-builder s] [str-builder s & more]), :doc "For cross-platform string building"}, console-log {:name taoensso.encore/console-log, :file "out.prod.client/taoensso/encore.cljs", :line 2029, :column 3, :end-line 2029, :end-column 29, :private true, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2029, :column 18, :end-line 2029, :end-column 29, :private true}}, as-?nzero {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 384, :column 7, :end-line 384, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-?nzero, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 384, :end-line 384, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, oget {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 664, :column 7, :end-line 664, :end-column 11, :arglists (quote ([o k] [o k1 k2] [o k1 k2 & ks])), :doc "Like `aget` for JS objects, Ref. https://goo.gl/eze8hY.\n  Unlike `aget`, returns nil for missing keys instead of throwing.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([o k] [o k1 k2]), :arglists ([o k] [o k1 k2] [o k1 k2 & ks]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/oget, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([o k] [o k1 k2]), :arglists ([o k] [o k1 k2] [o k1 k2 & ks]), :arglists-meta (nil nil nil)}, :method-params ([o k] [o k1 k2]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 664, :end-line 664, :max-fixed-arity 3, :fn-var true, :arglists ([o k] [o k1 k2] [o k1 k2 & ks]), :doc "Like `aget` for JS objects, Ref. https://goo.gl/eze8hY.\n  Unlike `aget`, returns nil for missing keys instead of throwing."}, as-qname {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 450, :column 7, :end-line 450, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-qname, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 450, :end-line 450, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, get-window-location {:name taoensso.encore/get-window-location, :file "out.prod.client/taoensso/encore.cljs", :line 2408, :column 8, :end-line 2408, :end-column 32, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2408, :column 13, :end-line 2408, :end-column 32}}, format {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1280, :column 7, :end-line 1280, :end-column 13, :arglists (quote ([fmt & args])), :doc "Like `clojure.core/format` but:\n    * Returns \"\" when fmt is nil rather than throwing an NPE\n    * Formats nil as \"nil\" rather than \"null\"\n    * Provides ClojureScript support via goog.string.format (this has fewer\n      formatting options than Clojure's `format`!)", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}}, :name taoensso.encore/format, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}, :method-params [(fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1280, :end-line 1280, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & args]), :doc "Like `clojure.core/format` but:\n    * Returns \"\" when fmt is nil rather than throwing an NPE\n    * Formats nil as \"nil\" rather than \"null\"\n    * Provides ClojureScript support via goog.string.format (this has fewer\n      formatting options than Clojure's `format`!)"}, as-int {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 454, :column 7, :end-line 454, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/as-int, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 454, :end-line 454, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sentinel? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 293, :column 16, :end-line 293, :end-column 25, :arglists (quote ([x]))}, :name taoensso.encore/sentinel?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 25, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :line 293, :end-line 293, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nnil-set {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 685, :column 7, :end-line 685, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/nnil-set, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 685, :end-line 685, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, pval? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 289, :column 13, :end-line 289, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/pval?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, singleton? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 671, :column 9, :end-line 671, :end-column 19, :arglists (quote ([coll]))}, :name taoensso.encore/singleton?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 671, :end-line 671, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, swapped {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1052, :column 8, :end-line 1052, :end-column 15, :arglists (quote ([new-val return-val]))}, :name taoensso.encore/swapped, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([new-val return-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1052, :end-line 1052, :max-fixed-arity 2, :fn-var true, :arglists (quote ([new-val return-val]))}, as-nblank {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 447, :column 7, :end-line 447, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-nblank, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 447, :end-line 447, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, logging-level {:name taoensso.encore/logging-level, :file "out.prod.client/taoensso/encore.cljs", :line 2460, :column 1, :end-line 2460, :end-column 19, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2460, :column 6, :end-line 2460, :end-column 19}}, sub-indexes {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 822, :column 7, :end-line 822, :end-column 18, :arglists (quote ([x start-idx & {:keys [max-len end-idx]}])), :doc "Returns [<inclusive-start-idx*> <exclusive-end-idx*>] for counted 0-indexed\n  input (str, vec, etc.) with support for:\n    * Clamping of indexes beyond limits.\n    * Max-length -> end-index.\n    * -ive indexes (as +ive indexes but work from back of input):\n      (+0) (+1) (+2) (+3) (+4)  ; inclusive +ive indexes\n        h    e    l    l    o   ; 5 count\n      (-5) (-4) (-3) (-2) (-1)  ; inclusive -ive indexes", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(x start-idx {:keys [max-len end-idx]})], :arglists ([x start-idx & {:keys [max-len end-idx]}]), :arglists-meta (nil)}}, :name taoensso.encore/sub-indexes, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(x start-idx {:keys [max-len end-idx]})], :arglists ([x start-idx & {:keys [max-len end-idx]}]), :arglists-meta (nil)}, :method-params [(x start-idx {:keys [max-len end-idx]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 822, :end-line 822, :max-fixed-arity 2, :fn-var true, :arglists ([x start-idx & {:keys [max-len end-idx]}]), :doc "Returns [<inclusive-start-idx*> <exclusive-end-idx*>] for counted 0-indexed\n  input (str, vec, etc.) with support for:\n    * Clamping of indexes beyond limits.\n    * Max-length -> end-index.\n    * -ive indexes (as +ive indexes but work from back of input):\n      (+0) (+1) (+2) (+3) (+4)  ; inclusive +ive indexes\n        h    e    l    l    o   ; 5 count\n      (-5) (-4) (-3) (-2) (-1)  ; inclusive -ive indexes"}, undefined->nil {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1241, :column 14, :end-line 1241, :end-column 28, :arglists (quote ([x]))}, :name taoensso.encore/undefined->nil, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 28, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 8, :line 1241, :end-line 1241, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, memoize-a0_ {:name taoensso.encore/memoize-a0_, :file "out.prod.client/taoensso/encore.cljs", :line 2419, :column 1, :end-line 2419, :end-column 17, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2419, :column 6, :end-line 2419, :end-column 17}}, now-dt {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 596, :column 9, :end-line 596, :end-column 15, :arglists (quote ([]))}, :name taoensso.encore/now-dt, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 596, :end-line 596, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, repeatedly-into {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 773, :column 7, :end-line 773, :end-column 22, :arglists (quote ([coll n f])), :doc "Like `repeatedly` but faster and `conj`s items into given collection"}, :name taoensso.encore/repeatedly-into, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 22, :method-params ([coll n f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 773, :end-line 773, :max-fixed-arity 3, :fn-var true, :arglists (quote ([coll n f])), :doc "Like `repeatedly` but faster and `conj`s items into given collection"}, coerce-xhr-params {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2066, :column 8, :end-line 2066, :end-column 25, :private true, :arglists (quote ([uri method params])), :doc "[uri method get-or-post-params] -> [uri post-content]"}, :private true, :name taoensso.encore/coerce-xhr-params, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 25, :method-params ([uri method params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2066, :end-line 2066, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri method params])), :doc "[uri method get-or-post-params] -> [uri post-content]"}, pint? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 279, :column 13, :end-line 279, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/pint?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 279, :end-line 279, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nnil? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 275, :column 13, :end-line 275, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nnil?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 275, :end-line 275, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, memoize_ {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1506, :column 7, :end-line 1506, :end-column 15, :arglists (quote ([f])), :doc "Like `clojure.core/memoize` but faster + uses delays to avoid write races"}, :name taoensso.encore/memoize_, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1506, :end-line 1506, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "Like `clojure.core/memoize` but faster + uses delays to avoid write races"}, memoize-1 {:name taoensso.encore/memoize-1, :file "out.prod.client/taoensso/encore.cljs", :line 2423, :column 1, :end-line 2423, :end-column 15, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2423, :column 6, :end-line 2423, :end-column 15}}, as-?pint {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 411, :column 7, :end-line 411, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?pint, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 411, :end-line 411, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, str-contains? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1331, :column 7, :end-line 1331, :end-column 20, :arglists (quote ([s substr]))}, :name taoensso.encore/str-contains?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 20, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1331, :end-line 1331, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, swapped? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1051, :column 8, :end-line 1051, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/swapped?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1051, :end-line 1051, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, filter-vals {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 787, :column 7, :end-line 787, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-vals, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 787, :end-line 787, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, ks-nnil? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 795, :column 7, :end-line 795, :end-column 15, :arglists (quote ([ks m]))}, :name taoensso.encore/ks-nnil?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 795, :end-line 795, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, update-in* {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 805, :column 7, :end-line 805, :end-column 17, :arglists (quote ([m ks f])), :doc "Like `update-in` but faster, more flexible, and simpler (less ambiguous)"}, :name taoensso.encore/update-in*, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([m ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 805, :end-line 805, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m ks f])), :doc "Like `update-in` but faster, more flexible, and simpler (less ambiguous)"}, vnext {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 675, :column 7, :end-line 675, :end-column 12, :arglists (quote ([v]))}, :name taoensso.encore/vnext, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 675, :end-line 675, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, as-udt {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 456, :column 7, :end-line 456, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/as-udt, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 456, :end-line 456, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, *log-level* {:name taoensso.encore/*log-level*, :file "out.prod.client/taoensso/encore.cljs", :line 2469, :column 3, :end-line 2469, :end-column 45, :dynamic true, :doc "DEPRECATED", :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2469, :column 34, :end-line 2469, :end-column 45, :dynamic true, :doc "DEPRECATED"}}, dswap! {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1028, :column 7, :end-line 1028, :end-column 13, :arglists (quote ([atom_ f])), :doc "Returns [<old-val> <new-val>]"}, :name taoensso.encore/dswap!, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([atom_ f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1028, :end-line 1028, :max-fixed-arity 2, :fn-var true, :arglists (quote ([atom_ f])), :doc "Returns [<old-val> <new-val>]"}, run!* {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 703, :column 7, :end-line 703, :end-column 12, :arglists (quote ([proc coll]))}, :name taoensso.encore/run!*, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([proc coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 703, :end-line 703, :max-fixed-arity 2, :fn-var true, :arglists (quote ([proc coll]))}, takev {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 766, :column 9, :end-line 766, :end-column 14, :arglists (quote ([n coll]))}, :name taoensso.encore/takev, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([n coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 766, :end-line 766, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n coll]))}, count-words {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1414, :column 7, :end-line 1414, :end-column 18, :arglists (quote ([s]))}, :name taoensso.encore/count-words, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1414, :end-line 1414, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, remove-kvs {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 790, :column 7, :end-line 790, :end-column 17, :arglists (quote ([pred m]))}, :name taoensso.encore/remove-kvs, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 790, :end-line 790, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, lazy-seq? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 273, :column 9, :end-line 273, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/lazy-seq?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ms->secs {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 599, :column 7, :end-line 599, :end-column 15, :arglists (quote ([ms]))}, :name taoensso.encore/ms->secs, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 599, :end-line 599, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, run-kv! {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 702, :column 7, :end-line 702, :end-column 14, :arglists (quote ([proc m]))}, :name taoensso.encore/run-kv!, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([proc m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 702, :end-line 702, :max-fixed-arity 2, :fn-var true, :arglists (quote ([proc m]))}, mapply {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 943, :column 7, :end-line 943, :end-column 13, :arglists (quote ([f & args])), :doc "Like `apply` but calls `seq-kvs` on final arg", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name taoensso.encore/mapply, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 943, :end-line 943, :max-fixed-arity 1, :fn-var true, :arglists ([f & args]), :doc "Like `apply` but calls `seq-kvs` on final arg"}, as-ufloat {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 459, :column 7, :end-line 459, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-ufloat, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 459, :end-line 459, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, rate-limit {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1897, :column 7, :end-line 1897, :end-column 17, :arglists (quote ([specs f]))}, :name taoensso.encore/rate-limit, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([specs f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1897, :end-line 1897, :max-fixed-arity 2, :fn-var true, :arglists (quote ([specs f]))}, error-data {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 309, :column 7, :end-line 309, :end-column 17, :arglists (quote ([x])), :doc "Returns data map iff `x` is an error of any type on platform"}, :name taoensso.encore/error-data, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 309, :end-line 309, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns data map iff `x` is an error of any type on platform"}, map->Swapped {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1050, :column 12, :end-line 1050, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__19618]))}, :name taoensso.encore/map->Swapped, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([G__19618]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 1050, :end-line 1050, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19618]))}, queue {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 935, :column 7, :end-line 935, :end-column 12, :arglists (quote ([coll] [])), :doc "Returns a PersistentQueue", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([coll] []), :arglists ([coll] []), :arglists-meta (nil nil)}}, :name taoensso.encore/queue, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([coll] []), :arglists ([coll] []), :arglists-meta (nil nil)}, :method-params ([coll] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 935, :end-line 935, :max-fixed-arity 1, :fn-var true, :arglists ([coll] []), :doc "Returns a PersistentQueue"}, reset-in! {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1162, :column 7, :end-line 1162, :end-column 16, :arglists (quote ([atom_ ks new-val] [atom_ ks new-val & more])), :doc "Is to `reset!` as `swap-in!` is to `swap!`", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks new-val]), :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/reset-in!, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks new-val]), :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :arglists-meta (nil nil)}, :method-params ([atom_ ks new-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1162, :end-line 1162, :max-fixed-arity 3, :fn-var true, :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :doc "Is to `reset!` as `swap-in!` is to `swap!`"}, format* {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1270, :column 7, :end-line 1270, :end-column 14, :arglists (quote ([fmt args]))}, :name taoensso.encore/format*, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([fmt args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1270, :end-line 1270, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fmt args]))}, remove-vals {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 788, :column 7, :end-line 788, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/remove-vals, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 788, :end-line 788, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, round* {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 553, :column 7, :end-line 553, :end-column 13, :arglists (quote ([n] [type n] [type nplaces n])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([n] [type n] [type nplaces n]), :arglists ([n] [type n] [type nplaces n]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/round*, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([n] [type n] [type nplaces n]), :arglists ([n] [type n] [type nplaces n]), :arglists-meta (nil nil nil)}, :method-params ([n] [type n] [type nplaces n]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 553, :end-line 553, :max-fixed-arity 3, :fn-var true, :arglists ([n] [type n] [type nplaces n])}, pos-num? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 287, :column 10, :end-line 287, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/pos-num?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, top {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 875, :column 7, :end-line 875, :end-column 10, :arglists (quote ([n coll] [n keyfn coll] [n keyfn cmp coll])), :doc "Returns a sorted vector of the top n items from coll of N items in O(N.logn)\n  time. (take n (sort-by ...)) is O(N.logN) time, so much slower when n << N.\n  Ref. http://stevehanov.ca/blog/index.php?id=122", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([n coll] [n keyfn coll] [n keyfn cmp coll]), :arglists ([n coll] [n keyfn coll] [n keyfn cmp coll]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/top, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([n coll] [n keyfn coll] [n keyfn cmp coll]), :arglists ([n coll] [n keyfn coll] [n keyfn cmp coll]), :arglists-meta (nil nil nil)}, :method-params ([n coll] [n keyfn coll] [n keyfn cmp coll]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 875, :end-line 875, :max-fixed-arity 4, :fn-var true, :arglists ([n coll] [n keyfn coll] [n keyfn cmp coll]), :doc "Returns a sorted vector of the top n items from coll of N items in O(N.logn)\n  time. (take n (sort-by ...)) is O(N.logN) time, so much slower when n << N.\n  Ref. http://stevehanov.ca/blog/index.php?id=122"}, stringy? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 270, :column 10, :end-line 270, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/stringy?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, revery? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 708, :column 7, :end-line 708, :end-column 14, :arglists (quote ([pred coll])), :doc "Faster `every?` based on `reduce`"}, :name taoensso.encore/revery?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 708, :end-line 708, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll])), :doc "Faster `every?` based on `reduce`"}, vec2? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 283, :column 13, :end-line 283, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/vec2?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, parse-float {:name taoensso.encore/parse-float, :file "out.prod.client/taoensso/encore.cljs", :line 2416, :column 1, :end-line 2416, :end-column 17, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2416, :column 6, :end-line 2416, :end-column 17}}, vsplit-last {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 676, :column 7, :end-line 676, :end-column 18, :arglists (quote ([v]))}, :name taoensso.encore/vsplit-last, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 676, :end-line 676, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, rsome {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 705, :column 7, :end-line 705, :end-column 12, :arglists (quote ([pred coll])), :doc "Faster `some` based on `reduce`"}, :name taoensso.encore/rsome, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 705, :end-line 705, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll])), :doc "Faster `some` based on `reduce`"}, re-pattern? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 274, :column 7, :end-line 274, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/re-pattern?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, as-?int {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 393, :column 7, :end-line 393, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-?int, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 393, :end-line 393, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ks<= {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 793, :column 7, :end-line 793, :end-column 11, :arglists (quote ([ks m]))}, :name taoensso.encore/ks<=, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 11, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 793, :end-line 793, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, name-with-attrs {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 92, :column 7, :end-line 92, :end-column 22, :arglists (quote ([sym sigs] [sym attrs-merge sigs])), :doc "Given a name symbol and sigs, returns [<name-with-attrs-meta> <args>]", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sym sigs] [sym attrs-merge sigs]), :arglists ([sym sigs] [sym attrs-merge sigs]), :arglists-meta (nil nil)}}, :name taoensso.encore/name-with-attrs, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sym sigs] [sym attrs-merge sigs]), :arglists ([sym sigs] [sym attrs-merge sigs]), :arglists-meta (nil nil)}, :method-params ([sym sigs] [sym attrs-merge sigs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 3, :fn-var true, :arglists ([sym sigs] [sym attrs-merge sigs]), :doc "Given a name symbol and sigs, returns [<name-with-attrs-meta> <args>]"}, -nested-merge-with {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 986, :column 7, :end-line 986, :end-column 25, :arglists (quote ([f maps]))}, :name taoensso.encore/-nested-merge-with, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 25, :method-params ([f maps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 986, :end-line 986, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f maps]))}, pow {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 551, :column 7, :end-line 551, :end-column 10, :arglists (quote ([n exp]))}, :name taoensso.encore/pow, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 10, :method-params ([n exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 551, :end-line 551, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n exp]))}, as-?pfloat {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 413, :column 7, :end-line 413, :end-column 17, :arglists (quote ([x]))}, :name taoensso.encore/as-?pfloat, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 413, :end-line 413, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, named? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 255, :column 7, :end-line 255, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/named?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, exp-backoff {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 584, :column 7, :end-line 584, :end-column 18, :arglists (quote ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]])), :doc "Returns binary exponential backoff value.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :arglists-meta (nil)}}, :name taoensso.encore/exp-backoff, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :arglists-meta (nil)}, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 584, :end-line 584, :max-fixed-arity 1, :fn-var true, :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :doc "Returns binary exponential backoff value."}, swap-val! {:name taoensso.encore/swap-val!, :file "out.prod.client/taoensso/encore.cljs", :line 2418, :column 1, :end-line 2418, :end-column 15, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2418, :column 6, :end-line 2418, :end-column 15}}, as-?uint {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 409, :column 7, :end-line 409, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?uint, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 409, :end-line 409, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, as-nemail {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 453, :column 7, :end-line 453, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-nemail, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 453, :end-line 453, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map-keys {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 784, :column 7, :end-line 784, :end-column 15, :arglists (quote ([f m]))}, :name taoensso.encore/map-keys, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 784, :end-line 784, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, into! {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 741, :column 9, :end-line 741, :end-column 14, :arglists (quote ([to from] [to xform from])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([to from] [to xform from]), :arglists ([to from] [to xform from]), :arglists-meta (nil nil)}}, :name taoensso.encore/into!, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([to from] [to xform from]), :arglists ([to from] [to xform from]), :arglists-meta (nil nil)}, :method-params ([to from] [to xform from]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 741, :end-line 741, :max-fixed-arity 3, :fn-var true, :arglists ([to from] [to xform from])}, substr {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1320, :column 7, :end-line 1320, :end-column 13, :arglists (quote ([s start-idx & [?max-len]])), :doc "Gives a consistent, flexible, cross-platform substring API built on\n  `sub-indexes`", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s start-idx [?max-len])], :arglists ([s start-idx & [?max-len]]), :arglists-meta (nil)}}, :name taoensso.encore/substr, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s start-idx [?max-len])], :arglists ([s start-idx & [?max-len]]), :arglists-meta (nil)}, :method-params [(s start-idx [?max-len])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1320, :end-line 1320, :max-fixed-arity 2, :fn-var true, :arglists ([s start-idx & [?max-len]]), :doc "Gives a consistent, flexible, cross-platform substring API built on\n  `sub-indexes`"}, editable? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 259, :column 7, :end-line 259, :end-column 16, :arglists (quote ([coll]))}, :name taoensso.encore/editable?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 259, :end-line 259, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, conj-some {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 686, :column 7, :end-line 686, :end-column 16, :arglists (quote ([] [coll] [coll ?x] [coll ?x & ?xs])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [coll] [coll ?x]), :arglists ([] [coll] [coll ?x] [coll ?x & ?xs]), :arglists-meta (nil nil nil nil)}}, :name taoensso.encore/conj-some, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [coll] [coll ?x]), :arglists ([] [coll] [coll ?x] [coll ?x & ?xs]), :arglists-meta (nil nil nil nil)}, :method-params ([] [coll] [coll ?x]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 686, :end-line 686, :max-fixed-arity 2, :fn-var true, :arglists ([] [coll] [coll ?x] [coll ?x & ?xs])}, into-all {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 769, :column 7, :end-line 769, :end-column 15, :arglists (quote ([to from] [to from & more])), :doc "Like `into` but supports multiple \"from\"s", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([to from]), :arglists ([to from] [to from & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/into-all, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([to from]), :arglists ([to from] [to from & more]), :arglists-meta (nil nil)}, :method-params ([to from]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 769, :end-line 769, :max-fixed-arity 2, :fn-var true, :arglists ([to from] [to from & more]), :doc "Like `into` but supports multiple \"from\"s"}, secs {:name taoensso.encore/secs, :file "out.prod.client/taoensso/encore.cljs", :line 616, :column 1, :end-line 616, :end-column 10, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 616, :column 6, :end-line 616, :end-column 10}}, nil->str {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1242, :column 7, :end-line 1242, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/nil->str, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1242, :end-line 1242, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, interleave-all {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 960, :column 7, :end-line 960, :end-column 21, :arglists (quote ([] [c1] [c1 c2] [c1 c2 & colls])), :doc "Greedy version of `interleave`, Ref. http://goo.gl/KvzqWb", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [c1] [c1 c2]), :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :arglists-meta (nil nil nil nil)}}, :name taoensso.encore/interleave-all, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [c1] [c1 c2]), :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :arglists-meta (nil nil nil nil)}, :method-params ([] [c1] [c1 c2]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 960, :end-line 960, :max-fixed-arity 2, :fn-var true, :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :doc "Greedy version of `interleave`, Ref. http://goo.gl/KvzqWb"}, round0 {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 580, :column 7, :end-line 580, :end-column 13, :arglists (quote ([n]))}, :name taoensso.encore/round0, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 580, :end-line 580, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, when? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 429, :column 7, :end-line 429, :end-column 12, :arglists (quote ([pred x]))}, :name taoensso.encore/when?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([pred x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 429, :end-line 429, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred x]))}, remove-keys {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 789, :column 7, :end-line 789, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/remove-keys, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 789, :end-line 789, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, approx= {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 532, :column 7, :end-line 532, :end-column 14, :arglists (quote ([x y] [x y signf])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y signf]), :arglists ([x y] [x y signf]), :arglists-meta (nil nil)}}, :name taoensso.encore/approx=, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y signf]), :arglists ([x y] [x y signf]), :arglists-meta (nil nil)}, :method-params ([x y] [x y signf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 532, :end-line 532, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y signf])}, as-?ufloat {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 412, :column 7, :end-line 412, :end-column 17, :arglists (quote ([x]))}, :name taoensso.encore/as-?ufloat, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 412, :end-line 412, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, merge-url-with-query-string {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2333, :column 7, :end-line 2333, :end-column 34, :arglists (quote ([url m]))}, :name taoensso.encore/merge-url-with-query-string, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 34, :method-params ([url m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2333, :end-line 2333, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url m]))}, str-builder {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1215, :column 6, :end-line 1215, :end-column 17}, :name taoensso.encore/str-builder, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([] [s-init]), :protocol-impl nil, :arglists-meta (), :column 1, :line 1215, :end-line 1215, :max-fixed-arity 1, :fn-var true, :arglists nil, :doc "For cross-platform string building"}, kw-identical? {:name taoensso.encore/kw-identical?, :file "out.prod.client/taoensso/encore.cljs", :line 369, :column 8, :end-line 369, :end-column 27, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 369, :column 14, :end-line 369, :end-column 27}}, assoc-conj {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2305, :column 8, :end-line 2305, :end-column 18, :private true, :arglists (quote ([m k v]))}, :private true, :name taoensso.encore/assoc-conj, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([m k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2305, :end-line 2305, :max-fixed-arity 3, :fn-var true, :arglists (quote ([m k v]))}, swapped* {:name taoensso.encore/swapped*, :file "out.prod.client/taoensso/encore.cljs", :line 2417, :column 1, :end-line 2417, :end-column 14, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2417, :column 6, :end-line 2417, :end-column 14}}, js-?win {:name taoensso.encore/js-?win, :file "out.prod.client/taoensso/encore.cljs", :line 304, :column 1, :end-line 304, :end-column 13, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 304, :column 6, :end-line 304, :end-column 13}, :doc "May not be available with Node.js, etc."}, url-encode {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2264, :column 7, :end-line 2264, :end-column 17, :arglists (quote ([s])), :doc "Stolen from http://goo.gl/99NSR1"}, :name taoensso.encore/url-encode, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2264, :end-line 2264, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Stolen from http://goo.gl/99NSR1"}, qname {:name taoensso.encore/qname, :file "out.prod.client/taoensso/encore.cljs", :line 2411, :column 1, :end-line 2411, :end-column 11, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2411, :column 6, :end-line 2411, :end-column 11}}, fzipmap {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 948, :column 7, :end-line 948, :end-column 14, :arglists (quote ([ks vs])), :doc "Faster `zipmap` using transients"}, :name taoensso.encore/fzipmap, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([ks vs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 948, :end-line 948, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks vs])), :doc "Faster `zipmap` using transients"}, fq-name {:name taoensso.encore/fq-name, :file "out.prod.client/taoensso/encore.cljs", :line 2410, :column 1, :end-line 2410, :end-column 13, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2410, :column 6, :end-line 2410, :end-column 13}}, keys>= {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2447, :column 7, :end-line 2447, :end-column 13, :arglists (quote ([m ks]))}, :name taoensso.encore/keys>=, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2447, :end-line 2447, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, distinctv {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2507, :column 7, :end-line 2507, :end-column 16, :arglists (quote ([coll] [keyfn coll])), :doc "Deprecated, prefer `xdistinct`", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [keyfn coll]), :arglists ([coll] [keyfn coll]), :arglists-meta (nil nil)}}, :name taoensso.encore/distinctv, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [keyfn coll]), :arglists ([coll] [keyfn coll]), :arglists-meta (nil nil)}, :method-params ([coll] [keyfn coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2507, :end-line 2507, :max-fixed-arity 2, :fn-var true, :arglists ([coll] [keyfn coll]), :doc "Deprecated, prefer `xdistinct`"}, filter-keys {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 786, :column 7, :end-line 786, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-keys, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 786, :end-line 786, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, str-rf {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1230, :column 6, :end-line 1230, :end-column 12}, :name taoensso.encore/str-rf, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([] [acc] [acc in]), :protocol-impl nil, :arglists-meta (), :column 1, :line 1230, :end-line 1230, :max-fixed-arity 2, :fn-var true, :arglists nil, :doc "String builder reducing fn"}, queue? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 931, :column 7, :end-line 931, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/queue?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 931, :end-line 931, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, debugf {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2475, :column 9, :end-line 2475, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/debugf, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2475, :end-line 2475, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, get-dynamic-assertion-data {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 49, :column 12, :end-line 49, :end-column 38, :arglists (quote ([]))}, :name taoensso.encore/get-dynamic-assertion-data, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 38, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, as-?udt {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 410, :column 7, :end-line 410, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-?udt, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 410, :end-line 410, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, get-pooled-xhr! {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2058, :column 8, :end-line 2058, :end-column 23, :private true, :arglists (quote ([])), :doc "Returns an immediately available XhrIo instance, or nil. The instance must be\n  released back to pool manually."}, :private true, :name taoensso.encore/get-pooled-xhr!, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2058, :end-line 2058, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns an immediately available XhrIo instance, or nil. The instance must be\n  released back to pool manually."}, pr-edn {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 235, :column 7, :end-line 235, :end-column 13, :arglists (quote ([x] [_opts x])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [_opts x]), :arglists ([x] [_opts x]), :arglists-meta (nil nil)}}, :name taoensso.encore/pr-edn, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [_opts x]), :arglists ([x] [_opts x]), :arglists-meta (nil nil)}, :method-params ([x] [_opts x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 2, :fn-var true, :arglists ([x] [_opts x])}, ks= {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 792, :column 7, :end-line 792, :end-column 10, :arglists (quote ([ks m]))}, :name taoensso.encore/ks=, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 10, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 792, :end-line 792, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, nnil= {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 378, :column 7, :end-line 378, :end-column 12, :arglists (quote ([x y] [x y & more])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([x y]), :arglists ([x y] [x y & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/nnil=, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([x y]), :arglists ([x y] [x y & more]), :arglists-meta (nil nil)}, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 378, :end-line 378, :max-fixed-arity 2, :fn-var true, :arglists ([x y] [x y & more])}, tracef {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2474, :column 9, :end-line 2474, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/tracef, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2474, :end-line 2474, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, xhr-pool_ {:name taoensso.encore/xhr-pool_, :file "out.prod.client/taoensso/encore.cljs", :line 2056, :column 8, :end-line 2056, :end-column 32, :private true, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2056, :column 23, :end-line 2056, :end-column 32, :private true}}, -new-stub_ {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2351, :column 7, :end-line 2351, :end-column 17, :arglists (quote ([sfn-name]))}, :name taoensso.encore/-new-stub_, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([sfn-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2351, :end-line 2351, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sfn-name]))}, rate-limiter* {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1781, :column 7, :end-line 1781, :end-column 20, :arglists (quote ([specs])), :doc "Takes one or more rate specs of form [ncalls-limit window-ms ?spec-id] and\n  returns a (fn [& [req-id])) that returns `nil` (=> all rate limits passed), or\n  [<ms-wait> <worst-offending-spec-id>] / <ms-wait>."}, :name taoensso.encore/rate-limiter*, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 20, :method-params ([specs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1781, :end-line 1781, :max-fixed-arity 1, :fn-var true, :arglists (quote ([specs])), :doc "Takes one or more rate specs of form [ncalls-limit window-ms ?spec-id] and\n  returns a (fn [& [req-id])) that returns `nil` (=> all rate limits passed), or\n  [<ms-wait> <worst-offending-spec-id>] / <ms-wait>."}, preserve-reduced {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 694, :column 7, :end-line 694, :end-column 23, :arglists (quote ([rf])), :doc "As `clojure.core/preserving-reduced`"}, :name taoensso.encore/preserve-reduced, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 23, :method-params ([rf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 694, :end-line 694, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rf])), :doc "As `clojure.core/preserving-reduced`"}, as-float {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 458, :column 7, :end-line 458, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-float, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 458, :end-line 458, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, infof {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2476, :column 9, :end-line 2476, :end-column 14, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/infof, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2476, :end-line 2476, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, nneg-num? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 286, :column 9, :end-line 286, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nneg-num?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, zero-num? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 288, :column 9, :end-line 288, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/zero-num?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, secs->ms {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 598, :column 7, :end-line 598, :end-column 15, :arglists (quote ([secs]))}, :name taoensso.encore/secs->ms, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([secs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 598, :end-line 598, :max-fixed-arity 1, :fn-var true, :arglists (quote ([secs]))}, read-edn {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 191, :column 7, :end-line 191, :end-column 15, :arglists (quote ([s] [opts s])), :doc "Experimental. Attempts to pave over differences in:\n    `clojure.edn/read-string`, `clojure.tools.edn/read-string`,\n    `cljs.reader/read-string`, `cljs.tools.reader/read-string`.\n   `cljs.reader` in particular can be a bit of a pain.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [opts s]), :arglists ([s] [opts s]), :arglists-meta (nil nil)}}, :name taoensso.encore/read-edn, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [opts s]), :arglists ([s] [opts s]), :arglists-meta (nil nil)}, :method-params ([s] [opts s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 2, :fn-var true, :arglists ([s] [opts s]), :doc "Experimental. Attempts to pave over differences in:\n    `clojure.edn/read-string`, `clojure.tools.edn/read-string`,\n    `cljs.reader/read-string`, `cljs.tools.reader/read-string`.\n   `cljs.reader` in particular can be a bit of a pain."}, str-starts-with? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1335, :column 7, :end-line 1335, :end-column 23, :arglists (quote ([s substr]))}, :name taoensso.encore/str-starts-with?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 23, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1335, :end-line 1335, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, round {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2434, :column 7, :end-line 2434, :end-column 12, :arglists (quote ([n & [type nplaces]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(n [type nplaces])], :arglists ([n & [type nplaces]]), :arglists-meta (nil)}}, :name taoensso.encore/round, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(n [type nplaces])], :arglists ([n & [type nplaces]]), :arglists-meta (nil)}, :method-params [(n [type nplaces])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2434, :end-line 2434, :max-fixed-arity 1, :fn-var true, :arglists ([n & [type nplaces]])}, ->Swapped {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1050, :column 12, :end-line 1050, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([new-val return-val]))}, :name taoensso.encore/->Swapped, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([new-val return-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 1050, :end-line 1050, :max-fixed-arity 2, :fn-var true, :arglists (quote ([new-val return-val]))}, rate-limiter {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2451, :column 7, :end-line 2451, :end-column 19, :arglists (quote ([ncalls-limit window-ms]))}, :name taoensso.encore/rate-limiter, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([ncalls-limit window-ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2451, :end-line 2451, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ncalls-limit window-ms]))}, sayf {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2038, :column 9, :end-line 2038, :end-column 13, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/sayf, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2038, :end-line 2038, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, a1-memoize_ {:name taoensso.encore/a1-memoize_, :file "out.prod.client/taoensso/encore.cljs", :line 2422, :column 1, :end-line 2422, :end-column 17, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2422, :column 6, :end-line 2422, :end-column 17}}, least {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2486, :column 7, :end-line 2486, :end-column 12, :arglists (quote ([coll & [?comparator]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name taoensso.encore/least, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2486, :end-line 2486, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]])}, try-pred {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 428, :column 8, :end-line 428, :end-column 16, :private true, :arglists (quote ([pred x]))}, :private true, :name taoensso.encore/try-pred, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([pred x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 428, :end-line 428, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred x]))}, nblank-str? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 285, :column 7, :end-line 285, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nblank-str?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, as-pval {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 461, :column 7, :end-line 461, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-pval, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 461, :end-line 461, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, derefable? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 263, :column 7, :end-line 263, :end-column 17, :arglists (quote ([x]))}, :name taoensso.encore/derefable?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 263, :end-line 263, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, uuid-str {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1417, :column 7, :end-line 1417, :end-column 15, :arglists (quote ([max-length] [])), :doc "Returns a UUIDv4 string of form \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\n  Ref. http://www.ietf.org/rfc/rfc4122.txt,\n       https://gist.github.com/franks42/4159427", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([max-length] []), :arglists ([max-length] []), :arglists-meta (nil nil)}}, :name taoensso.encore/uuid-str, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([max-length] []), :arglists ([max-length] []), :arglists-meta (nil nil)}, :method-params ([max-length] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1417, :end-line 1417, :max-fixed-arity 1, :fn-var true, :arglists ([max-length] []), :doc "Returns a UUIDv4 string of form \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\n  Ref. http://www.ietf.org/rfc/rfc4122.txt,\n       https://gist.github.com/franks42/4159427"}, translate-signed-idx {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 815, :column 8, :end-line 815, :end-column 28, :private true, :arglists (quote ([signed-idx max-idx]))}, :private true, :name taoensso.encore/translate-signed-idx, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 28, :method-params ([signed-idx max-idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 815, :end-line 815, :max-fixed-arity 2, :fn-var true, :arglists (quote ([signed-idx max-idx]))}, as-?pval {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 414, :column 7, :end-line 414, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?pval, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 414, :end-line 414, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, pos-int? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 278, :column 10, :end-line 278, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/pos-int?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nblank? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 276, :column 11, :end-line 276, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nblank?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, set-exp-backoff-timeout! {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2463, :column 7, :end-line 2463, :end-column 31, :arglists (quote ([nullary-f & [nattempt]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}}, :name taoensso.encore/set-exp-backoff-timeout!, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 31, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}, :method-params [(nullary-f [nattempt])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2463, :end-line 2463, :max-fixed-arity 1, :fn-var true, :arglists ([nullary-f & [nattempt]])}, as-?bool {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 416, :column 7, :end-line 416, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-?bool, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 416, :end-line 416, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, seq-kvs {:name taoensso.encore/seq-kvs, :file "out.prod.client/taoensso/encore.cljs", :line 942, :column 1, :end-line 942, :end-column 13, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 942, :column 6, :end-line 942, :end-column 13}, :doc "(seq-kvs {:a :A}) => (:a :A)"}, vsplit-first {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 678, :column 7, :end-line 678, :end-column 19, :arglists (quote ([v]))}, :name taoensso.encore/vsplit-first, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 678, :end-line 678, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, abs {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 552, :column 7, :end-line 552, :end-column 10, :arglists (quote ([n]))}, :name taoensso.encore/abs, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 552, :end-line 552, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, map-kvs {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2519, :column 7, :end-line 2519, :end-column 14, :arglists (quote ([kf vf m])), :doc "Deprecated, prefer `reduce-kv`"}, :name taoensso.encore/map-kvs, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([kf vf m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2519, :end-line 2519, :max-fixed-arity 3, :fn-var true, :arglists (quote ([kf vf m])), :doc "Deprecated, prefer `reduce-kv`"}, map-vals {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 783, :column 7, :end-line 783, :end-column 15, :arglists (quote ([f m]))}, :name taoensso.encore/map-vals, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 783, :end-line 783, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, spaced-str-with-nils {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2430, :column 7, :end-line 2430, :end-column 27, :arglists (quote ([xs]))}, :name taoensso.encore/spaced-str-with-nils, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 27, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2430, :end-line 2430, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, -replace-in {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1081, :column 8, :end-line 1081, :end-column 19, :private true, :arglists (quote ([?vf-type m ops])), :doc "Reduces input with\n  [<type> <ks> <reset-val-or-swap-fn>] or\n         [<ks> <reset-val-or-swap-fn>] ops"}, :private true, :name taoensso.encore/-replace-in, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([?vf-type m ops]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1081, :end-line 1081, :max-fixed-arity 3, :fn-var true, :arglists (quote ([?vf-type m ops])), :doc "Reduces input with\n  [<type> <ks> <reset-val-or-swap-fn>] or\n         [<ks> <reset-val-or-swap-fn>] ops"}, str-join-once {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1371, :column 7, :end-line 1371, :end-column 20, :arglists (quote ([separator coll])), :doc "Like `string/join` but skips duplicate separators"}, :name taoensso.encore/str-join-once, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 20, :method-params ([separator coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1371, :end-line 1371, :max-fixed-arity 2, :fn-var true, :arglists (quote ([separator coll])), :doc "Like `string/join` but skips duplicate separators"}, nested-merge-with {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1008, :column 7, :end-line 1008, :end-column 24, :arglists (quote ([f & maps])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f maps)], :arglists ([f & maps]), :arglists-meta (nil)}}, :name taoensso.encore/nested-merge-with, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f maps)], :arglists ([f & maps]), :arglists-meta (nil)}, :method-params [(f maps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1008, :end-line 1008, :max-fixed-arity 1, :fn-var true, :arglists ([f & maps])}, as-?float {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 402, :column 7, :end-line 402, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-?float, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 402, :end-line 402, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, explode-keyword {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 487, :column 7, :end-line 487, :end-column 22, :arglists (quote ([k]))}, :name taoensso.encore/explode-keyword, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 22, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 487, :end-line 487, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, as-?nblank {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 385, :column 7, :end-line 385, :end-column 17, :arglists (quote ([x]))}, :name taoensso.encore/as-?nblank, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sentinel->nil {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 299, :column 9, :end-line 299, :end-column 22, :arglists (quote ([x]))}, :name taoensso.encore/sentinel->nil, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 299, :end-line 299, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, xdistinct {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 747, :column 9, :end-line 747, :end-column 18, :arglists (quote ([] [keyfn])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [keyfn]), :arglists ([] [keyfn]), :arglists-meta (nil nil)}}, :name taoensso.encore/xdistinct, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [keyfn]), :arglists ([] [keyfn]), :arglists-meta (nil nil)}, :method-params ([] [keyfn]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 747, :end-line 747, :max-fixed-arity 1, :fn-var true, :arglists ([] [keyfn])}, assoc-some {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 919, :column 7, :end-line 919, :end-column 17, :arglists (quote ([m k v] [m k v & kvs])), :doc "Assocs each kv iff its value is not nil", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([m k v]), :arglists ([m k v] [m k v & kvs]), :arglists-meta (nil nil)}}, :name taoensso.encore/assoc-some, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([m k v]), :arglists ([m k v] [m k v & kvs]), :arglists-meta (nil nil)}, :method-params ([m k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 919, :end-line 919, :max-fixed-arity 3, :fn-var true, :arglists ([m k v] [m k v & kvs]), :doc "Assocs each kv iff its value is not nil"}, keys=nnil? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2448, :column 7, :end-line 2448, :end-column 17, :arglists (quote ([m ks]))}, :name taoensso.encore/keys=nnil?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2448, :end-line 2448, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, pairs-into {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1127, :column 10, :end-line 1127, :end-column 20, :private true, :arglists (quote ([to from]))}, :private true, :name taoensso.encore/pairs-into, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 20, :method-params ([to from]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 1127, :end-line 1127, :max-fixed-arity 2, :fn-var true, :arglists (quote ([to from]))}, as-bool {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 451, :column 7, :end-line 451, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-bool, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 451, :end-line 451, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, errorf {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2478, :column 9, :end-line 2478, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/errorf, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2478, :end-line 2478, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, clj1098 {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2492, :column 7, :end-line 2492, :end-column 14, :arglists (quote ([x])), :doc "Ref. http://goo.gl/0GzRuz"}, :name taoensso.encore/clj1098, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2492, :end-line 2492, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Ref. http://goo.gl/0GzRuz"}, parse-bool {:name taoensso.encore/parse-bool, :file "out.prod.client/taoensso/encore.cljs", :line 2414, :column 1, :end-line 2414, :end-column 16, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2414, :column 6, :end-line 2414, :end-column 16}}, keys<= {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2446, :column 7, :end-line 2446, :end-column 13, :arglists (quote ([m ks]))}, :name taoensso.encore/keys<=, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2446, :end-line 2446, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, str-replace {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1288, :column 7, :end-line 1288, :end-column 18, :arglists (quote ([s match replacement])), :doc "Workaround for http://dev.clojure.org/jira/browse/CLJS-794,\n                  http://dev.clojure.org/jira/browse/CLJS-911.\n\n  Note that ClojureScript 1.7.145 technically introduced a breaking \"fix\" for\n  CLJS-911 (Ref. https://goo.gl/bk5hcT) but it's a mess in an attempt to keep\n  some compatibility with the previous broken behaviour. The merged CLJS-911 fix\n  provides only inconsistent (single-match) and error-prone compatibility with\n  Clojure's `str/replace`. CLJS-794 is also still unresolved.\n\n  This util provides behaviour consistent between Clojure/Script."}, :name taoensso.encore/str-replace, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([s match replacement]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1288, :end-line 1288, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s match replacement])), :doc "Workaround for http://dev.clojure.org/jira/browse/CLJS-794,\n                  http://dev.clojure.org/jira/browse/CLJS-911.\n\n  Note that ClojureScript 1.7.145 technically introduced a breaking \"fix\" for\n  CLJS-911 (Ref. https://goo.gl/bk5hcT) but it's a mess in an attempt to keep\n  some compatibility with the previous broken behaviour. The merged CLJS-911 fix\n  provides only inconsistent (single-match) and error-prone compatibility with\n  Clojure's `str/replace`. CLJS-794 is also still unresolved.\n\n  This util provides behaviour consistent between Clojure/Script."}, parse-int {:name taoensso.encore/parse-int, :file "out.prod.client/taoensso/encore.cljs", :line 2415, :column 1, :end-line 2415, :end-column 15, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2415, :column 6, :end-line 2415, :end-column 15}}, get-win-loc {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2041, :column 7, :end-line 2041, :end-column 18, :arglists (quote ([])), :doc "Returns `js/window`'s current location as a map"}, :name taoensso.encore/get-win-loc, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2041, :end-line 2041, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns `js/window`'s current location as a map"}, without-meta {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 375, :column 7, :end-line 375, :end-column 19, :arglists (quote ([x]))}, :name taoensso.encore/without-meta, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 375, :end-line 375, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, memoize1 {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1547, :column 7, :end-line 1547, :end-column 15, :arglists (quote ([f])), :doc "Great for Reactjs render op caching on mobile devices, etc."}, :name taoensso.encore/memoize1, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1547, :end-line 1547, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "Great for Reactjs render op caching on mobile devices, etc."}, round1 {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 581, :column 7, :end-line 581, :end-column 13, :arglists (quote ([n]))}, :name taoensso.encore/round1, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 581, :end-line 581, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, merge-deep-with {:name taoensso.encore/merge-deep-with, :file "out.prod.client/taoensso/encore.cljs", :line 2412, :column 1, :end-line 2412, :end-column 21, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2412, :column 6, :end-line 2412, :end-column 21}}, as-email {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 452, :column 7, :end-line 452, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-email, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 452, :end-line 452, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, vec3? {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 284, :column 13, :end-line 284, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/vec3?, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 284, :end-line 284, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, assert-min-encore-version {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 57, :column 7, :end-line 57, :end-column 32, :arglists (quote ([min-version]))}, :name taoensso.encore/assert-min-encore-version, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 32, :method-params ([min-version]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([min-version]))}, replace-in {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1101, :column 7, :end-line 1101, :end-column 17, :arglists (quote ([m & ops])), :doc "For use with `swap!`, etc.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m ops)], :arglists ([m & ops]), :arglists-meta (nil)}}, :name taoensso.encore/replace-in, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m ops)], :arglists ([m & ops]), :arglists-meta (nil)}, :method-params [(m ops)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1101, :end-line 1101, :max-fixed-arity 1, :fn-var true, :arglists ([m & ops]), :doc "For use with `swap!`, etc."}, assoc-when {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 924, :column 7, :end-line 924, :end-column 17, :arglists (quote ([m k v] [m k v & kvs])), :doc "Assocs each kv iff its val is truthy", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([m k v]), :arglists ([m k v] [m k v & kvs]), :arglists-meta (nil nil)}}, :name taoensso.encore/assoc-when, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([m k v]), :arglists ([m k v] [m k v & kvs]), :arglists-meta (nil nil)}, :method-params ([m k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 924, :end-line 924, :max-fixed-arity 3, :fn-var true, :arglists ([m k v] [m k v & kvs]), :doc "Assocs each kv iff its val is truthy"}, as-?qname {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 388, :column 7, :end-line 388, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/as-?qname, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 388, :end-line 388, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, logp {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2035, :column 9, :end-line 2035, :end-column 13, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/logp, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 2035, :end-line 2035, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, as-map {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2529, :column 7, :end-line 2529, :end-column 13, :arglists (quote ([kvs & [kf vf]])), :doc "Deprecated, prefer `reduce-kvs`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(kvs [kf vf])], :arglists ([kvs & [kf vf]]), :arglists-meta (nil)}}, :name taoensso.encore/as-map, :variadic true, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(kvs [kf vf])], :arglists ([kvs & [kf vf]]), :arglists-meta (nil)}, :method-params [(kvs [kf vf])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 2529, :end-line 2529, :max-fixed-arity 1, :fn-var true, :arglists ([kvs & [kf vf]]), :doc "Deprecated, prefer `reduce-kvs`"}, vec* {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 363, :column 7, :end-line 363, :end-column 11, :arglists (quote ([x]))}, :name taoensso.encore/vec*, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 363, :end-line 363, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, backport-run! {:name taoensso.encore/backport-run!, :file "out.prod.client/taoensso/encore.cljs", :line 2409, :column 1, :end-line 2409, :end-column 19, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2409, :column 6, :end-line 2409, :end-column 19}}, gc-rate {:name taoensso.encore/gc-rate, :file "out.prod.client/taoensso/encore.cljs", :line 1503, :column 1, :end-line 1503, :end-column 31, :const true, :private true, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1503, :column 24, :end-line 1503, :end-column 31, :const true, :private true}}, keys= {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 2445, :column 7, :end-line 2445, :end-column 12, :arglists (quote ([m ks]))}, :name taoensso.encore/keys=, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2445, :end-line 2445, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, ks>= {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 794, :column 7, :end-line 794, :end-column 11, :arglists (quote ([ks m]))}, :name taoensso.encore/ks>=, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 11, :method-params ([ks m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 794, :end-line 794, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ks m]))}, -swapped {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1053, :column 7, :end-line 1053, :end-column 15, :arglists (quote ([x] [old-val f] [old-val ks f])), :doc "Returns [<new-val> <return-val>]", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x] [old-val f] [old-val ks f]), :arglists ([x] [old-val f] [old-val ks f]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/-swapped, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x] [old-val f] [old-val ks f]), :arglists ([x] [old-val f] [old-val ks f]), :arglists-meta (nil nil nil)}, :method-params ([x] [old-val f] [old-val ks f]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1053, :end-line 1053, :max-fixed-arity 3, :fn-var true, :arglists ([x] [old-val f] [old-val ks f]), :doc "Returns [<new-val> <return-val>]"}, ->vec {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 673, :column 7, :end-line 673, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/->vec, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 673, :end-line 673, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, round2 {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 582, :column 7, :end-line 582, :end-column 13, :arglists (quote ([n]))}, :name taoensso.encore/round2, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 582, :end-line 582, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, -platform-cas! {:protocol-inline nil, :meta {:file "/home/emh/github/rts/out.prod.client/taoensso/encore.cljs", :line 1022, :column 8, :end-line 1022, :end-column 22, :private true, :arglists (quote ([atom_ old-val new-val])), :doc "Minor optimization for single-threaded Cljs"}, :private true, :name taoensso.encore/-platform-cas!, :variadic false, :file "out.prod.client/taoensso/encore.cljs", :end-column 22, :method-params ([atom_ old-val new-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1022, :end-line 1022, :max-fixed-arity 3, :fn-var true, :arglists (quote ([atom_ old-val new-val])), :doc "Minor optimization for single-threaded Cljs"}}, :require-macros {enc-macros taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{:tick :args new-val :max-len :taoensso.encore/dynamic :nblank :?ratio :min :email :report :mem/all :get :backoff-ms :merge/dissoc :hash :rl/reset :ev :rl/peek :pfloat :?content :else :int :keywordize :err-type :reset :protocol :pval :unknown :uint :rl/all :method :default :pathname :float :xhr-pool-depleted :warn :msecs :name :trace :swap/dissoc :readers :secs :loaded :mem/del :months :params :days :type :mins :debug :err-cause :hostname :qname :search :abort :ufloat :udt :kw :fail-?data :http-error :headers :arg-val :fatal :round :progress-fn :mem/debug :host :total :with-credentials? :ajax/resp-as-text :arg :mem/fresh :result :errorf :max :factor :err-msg :swap :edn :raw-resp :info :rl/debug :?content-type :ajax/bad-response-type :hours :return-val :pint :years :nzero :error :?status :exception :bool :new-val :json :timeout :sfn-name :resp-type :min-version :your-version :ms :doc :xml :success? :length-computable? :auto :end-idx :xhr :arg-type :weeks :nemail :href :always return-val :timeout-ms :?error :no-content :text}, :order [:min-version :your-version :doc :arg :type :readers :taoensso.encore/dynamic :default :err-type :err-msg :err-cause :else :arg-val :arg-type :fail-?data :nzero :nblank :kw :name :qname :bool :email :nemail :int :uint :udt :pint :float :ufloat :pfloat :pval :round :min :max :factor :years :months :weeks :days :hours :mins :secs :msecs :ms :max-len :end-idx :merge/dissoc :new-val :return-val new-val return-val :swap/dissoc :swap :reset :mem/debug :mem/del :mem/all :mem/fresh :tick :rl/debug :rl/reset :rl/all :rl/peek :href :protocol :hostname :host :pathname :search :hash :method :get :params :headers :timeout-ms :resp-type :auto :with-credentials? :progress-fn :errorf :timeout :edn :json :xml :text :ajax/bad-response-type :ajax/resp-as-text :raw-resp :xhr :success? :?content-type :?content :?status :?error :exception :http-error :abort :unknown :no-content :?ratio :length-computable? :loaded :total :ev :always :xhr-pool-depleted :sfn-name :args :backoff-ms :result :debug :trace :info :warn :error :fatal :report :keywordize]}, :doc "Core utils library for Clojure/Script"}