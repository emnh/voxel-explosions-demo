;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name game.worker.state, :imports nil, :requires nil, :uses nil, :defs {State {:num-fields 6, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name game.worker.state/State, :file "src.worker/game/worker/state.cljs", :end-column 8, :type true, :column 3, :internal-ctor true, :line 16, :record true, :end-line 16, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, set-move-target {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 111, :column 7, :end-line 111, :end-column 22, :arglists (quote ([state index vector3]))}, :name game.worker.state/set-move-target, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 22, :method-params ([state index vector3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state index vector3]))}, -get-vector3 {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 25, :column 7, :end-line 25, :end-column 19, :arglists (quote ([float32-buffer float32-offset index]))}, :name game.worker.state/-get-vector3, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 19, :method-params ([float32-buffer float32-offset index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([float32-buffer float32-offset index]))}, ->State {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 16, :column 3, :end-line 16, :end-column 8, :internal-ctor true, :factory :positional, :arglists (quote ([buffer int32-buffer float32-buffer positions-offset bboxes-offset move-targets-offset]))}, :name game.worker.state/->State, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 8, :method-params ([buffer int32-buffer float32-buffer positions-offset bboxes-offset move-targets-offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 15, :end-line 16, :max-fixed-arity 6, :fn-var true, :arglists (quote ([buffer int32-buffer float32-buffer positions-offset bboxes-offset move-targets-offset]))}, get-move-target {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 104, :column 7, :end-line 104, :end-column 22, :arglists (quote ([state index]))}, :name game.worker.state/get-move-target, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 22, :method-params ([state index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state index]))}, float32-size {:name game.worker.state/float32-size, :file "src.worker/game/worker/state.cljs", :line 3, :column 1, :end-line 3, :end-column 18, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 3, :column 6, :end-line 3, :end-column 18}}, set-position {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 83, :column 7, :end-line 83, :end-column 19, :arglists (quote ([state index vector3]))}, :name game.worker.state/set-position, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 19, :method-params ([state index vector3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state index vector3]))}, int32-size {:name game.worker.state/int32-size, :file "src.worker/game/worker/state.cljs", :line 4, :column 1, :end-line 4, :end-column 16, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 4, :column 6, :end-line 4, :end-column 16}}, xyz-size {:name game.worker.state/xyz-size, :file "src.worker/game/worker/state.cljs", :line 5, :column 1, :end-line 5, :end-column 14, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 5, :column 6, :end-line 5, :end-column 14}}, map->State {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 16, :column 3, :end-line 16, :end-column 8, :internal-ctor true, :factory :map, :arglists (quote ([G__13184]))}, :name game.worker.state/map->State, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 8, :method-params ([G__13184]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 15, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__13184]))}, get-state-format {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 59, :column 7, :end-line 59, :end-column 23, :arglists (quote ([unit-count]))}, :name game.worker.state/get-state-format, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 23, :method-params ([unit-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit-count]))}, get-bbox {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 90, :column 7, :end-line 90, :end-column 15, :arglists (quote ([state index]))}, :name game.worker.state/get-bbox, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 15, :method-params ([state index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state index]))}, -get-bbox {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 52, :column 7, :end-line 52, :end-column 16, :arglists (quote ([float32-buffer float32-offset index]))}, :name game.worker.state/-get-bbox, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 16, :method-params ([float32-buffer float32-offset index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 3, :fn-var true, :arglists (quote ([float32-buffer float32-offset index]))}, init-state {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 119, :column 3, :end-line 119, :end-column 13, :arglists (quote ([{:keys [unit-count buffer]}]))}, :name game.worker.state/init-state, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 13, :method-params ([p__13190]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [unit-count buffer]}]))}, set-bbox {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 97, :column 7, :end-line 97, :end-column 15, :arglists (quote ([state index bbox]))}, :name game.worker.state/set-bbox, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 15, :method-params ([state index bbox]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state index bbox]))}, get-position {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 76, :column 7, :end-line 76, :end-column 19, :arglists (quote ([state index]))}, :name game.worker.state/get-position, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 19, :method-params ([state index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state index]))}, map->Ground {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 8, :column 3, :end-line 8, :end-column 9, :internal-ctor true, :factory :map, :arglists (quote ([G__13176]))}, :name game.worker.state/map->Ground, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 9, :method-params ([G__13176]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 7, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__13176]))}, -set-vector3 {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 37, :column 7, :end-line 37, :end-column 19, :arglists (quote ([float32-buffer float32-offset index vector3]))}, :name game.worker.state/-set-vector3, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 19, :method-params ([float32-buffer float32-offset index vector3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 4, :fn-var true, :arglists (quote ([float32-buffer float32-offset index vector3]))}, Ground {:num-fields 5, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name game.worker.state/Ground, :file "src.worker/game/worker/state.cljs", :end-column 9, :type true, :column 3, :internal-ctor true, :line 8, :record true, :end-line 8, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Ground {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 8, :column 3, :end-line 8, :end-column 9, :internal-ctor true, :factory :positional, :arglists (quote ([height-field width height x-faces y-faces]))}, :name game.worker.state/->Ground, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 9, :method-params ([height-field width height x-faces y-faces]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 7, :end-line 8, :max-fixed-arity 5, :fn-var true, :arglists (quote ([height-field width height x-faces y-faces]))}, -set-bbox {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/state.cljs", :line 47, :column 7, :end-line 47, :end-column 16, :arglists (quote ([float32-buffer float32-offset index bbox]))}, :name game.worker.state/-set-bbox, :variadic false, :file "src.worker/game/worker/state.cljs", :end-column 16, :method-params ([float32-buffer float32-offset index bbox]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 4, :fn-var true, :arglists (quote ([float32-buffer float32-offset index bbox]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y-faces :bboxes-offset :move-targets-offset :int32-buffer :get height float32-buffer buffer positions-offset :height-field y-faces bboxes-offset :name move-targets-offset :move-targets int32-buffer :width height-field width :length :bboxes :x-faces :unit-count :set x-faces :float32-buffer :buffer :positions :height :positions-offset}, :order [:height-field :width :height :x-faces :y-faces height-field width height x-faces y-faces :buffer :int32-buffer :float32-buffer :positions-offset :bboxes-offset :move-targets-offset buffer int32-buffer float32-buffer positions-offset bboxes-offset move-targets-offset :name :length :positions :bboxes :move-targets :unit-count :get :set]}, :doc nil}