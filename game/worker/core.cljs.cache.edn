;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros}, :excludes #{}, :name game.worker.core, :imports nil, :requires {component com.stuartsierra.component, com.stuartsierra.component com.stuartsierra.component, math game.client.math, game.client.math game.client.math, message game.worker.message, game.worker.message game.worker.message, state game.shared.state, game.shared.state game.shared.state}, :uses {with-simple-cause game.shared.state, s-add-component game.shared.state, s-readd-component game.shared.state}, :defs {hello {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/core.cljs", :line 13, :column 7, :end-line 13, :end-column 12, :arglists (quote ([]))}, :name game.worker.core/hello, :variadic false, :file "src.worker/game/worker/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, system {:name game.worker.core/system, :file "src.worker/game/worker/core.cljs", :line 17, :column 1, :end-line 17, :end-column 16, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/core.cljs", :line 17, :column 10, :end-line 17, :end-column 16}}, worker-main {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/core.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([]))}, :name game.worker.core/worker-main, :variadic false, :file "src.worker/game/worker/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {macros game.shared.macros, game.shared.macros game.shared.macros}, :cljs.analyzer/constants {:seen #{:core}, :order [:core]}, :doc nil}