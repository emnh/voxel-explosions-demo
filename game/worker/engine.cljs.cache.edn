;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros}, :excludes #{}, :name game.worker.engine, :imports nil, :requires {component com.stuartsierra.component, com.stuartsierra.component com.stuartsierra.component, ground game.client.ground-local, game.client.ground-local game.client.ground-local, math game.client.math, game.client.math game.client.math, state game.worker.state, game.worker.state game.worker.state}, :uses nil, :defs {process {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.worker/game/worker/engine.cljs", :line 10, :column 7, :end-line 10, :end-column 14, :arglists (quote ([component]))}, :name game.worker.engine/process, :variadic false, :file "/home/emh/public_html/github/rts/src.worker/game/worker/engine.cljs", :end-column 14, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}}, :require-macros {macros game.shared.macros, game.shared.macros game.shared.macros}, :cljs.analyzer/constants {:seen #{:map-dict :state :poll-state :unit-count :buffer}, :order [:unit-count :state :buffer :map-dict :poll-state]}, :doc nil}