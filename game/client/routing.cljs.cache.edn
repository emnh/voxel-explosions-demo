;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros}, :excludes #{remove}, :name game.client.routing, :imports {History goog.History}, :requires {pprint cljs.pprint, bidi.bidi bidi.bidi, jayq jayq.core, bidi bidi.bidi, EventType goog.history.EventType, rum.core rum.core, rum rum.core, goog.history.EventType goog.history.EventType, History goog.History, events goog.events, jayq.core jayq.core, cljs.pprint cljs.pprint, com.stuartsierra.component com.stuartsierra.component, component com.stuartsierra.component, string clojure.string, game.client.common game.client.common, common game.client.common, clojure.string clojure.string, goog.events goog.events}, :uses {data game.client.common, $ jayq.core}, :defs {get-page-element-id {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 17, :column 7, :end-line 17, :end-column 26, :arglists (quote ([page]))}, :name game.client.routing/get-page-element-id, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 26, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, new-router-Record {:num-fields 7, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.routing/new-router-Record, :file "src.client/game/client/routing.cljs", :type true, :column 1, :internal-ctor true, :line 130, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->new-router-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__10864])), :file nil}, :name game.client.routing/map->new-router-Record, :variadic false, :file "src.client/game/client/routing.cljs", :method-params ([G__10864]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__10864]))}, get-pages {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 48, :column 7, :end-line 48, :end-column 16, :arglists (quote ([]))}, :name game.client.routing/get-pages, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, routes {:name game.client.routing/routes, :file "src.client/game/client/routing.cljs", :line 33, :column 1, :end-line 33, :end-column 12, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 33, :column 6, :end-line 33, :end-column 12}}, get-page-$element {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 25, :column 7, :end-line 25, :end-column 24, :arglists (quote ([page]))}, :name game.client.routing/get-page-$element, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 24, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, ->new-router-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([routing-callback history route-match handlers started start-count stop-count])), :file nil}, :name game.client.routing/->new-router-Record, :variadic false, :file "src.client/game/client/routing.cljs", :method-params ([routing-callback history route-match handlers started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 130, :max-fixed-arity 7, :fn-var true, :arglists (quote ([routing-callback history route-match handlers started start-count stop-count]))}, page-list {:name game.client.routing/page-list, :file "src.client/game/client/routing.cljs", :line 47, :column 1, :end-line 47, :end-column 15, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 47, :column 6, :end-line 47, :end-column 15}}, page {:name game.client.routing/page, :arglists (quote ([pagekey])), :meta {:file nil, :arglists (quote ([pagekey]))}, :doc "", :file "src.client/game/client/routing.cljs", :line 50, :column 1}, change-page {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 97, :column 3, :end-line 97, :end-column 14, :arglists (quote ([new-page]))}, :name game.client.routing/change-page, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 14, :method-params ([new-page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([new-page]))}, pages {:name game.client.routing/pages, :arglists (quote ([])), :meta {:file nil, :arglists (quote ([]))}, :doc "", :file "src.client/game/client/routing.cljs", :line 57, :column 1}, get-page-element {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 29, :column 7, :end-line 29, :end-column 23, :arglists (quote ([page]))}, :name game.client.routing/get-page-element, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 23, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, get-page-selector {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 21, :column 7, :end-line 21, :end-column 24, :arglists (quote ([page]))}, :name game.client.routing/get-page-selector, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 24, :method-params ([page]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([page]))}, start-router {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 102, :column 3, :end-line 102, :end-column 15, :arglists (quote ([component]))}, :name game.client.routing/start-router, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 15, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, handle-url {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 68, :column 3, :end-line 68, :end-column 13, :arglists (quote ([component url]))}, :name game.client.routing/handle-url, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 13, :method-params ([component url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component url]))}, stop-router {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 126, :column 7, :end-line 126, :end-column 18, :arglists (quote ([component]))}, :name game.client.routing/stop-router, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 18, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, new-router {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 131, :column 3, :end-line 131, :end-column 13, :arglists (quote ([]))}, :name game.client.routing/new-router, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 131, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, game-active {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/routing.cljs", :line 139, :column 7, :end-line 139, :end-column 18, :arglists (quote ([]))}, :name game.client.routing/game-active, :variadic false, :file "src.client/game/client/routing.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {macros game.shared.macros, game.shared.macros game.shared.macros, pprint cljs.pprint, cljs.pprint cljs.pprint, rum rum.core, rum.core rum.core}, :cljs.analyzer/constants {:seen #{:started :game-test :game-lobby routing-callback :rum/class :stop-count started :game :load-test :history :handlers stop-count :route-match history :not-found handlers :id :start-count :lobby route-match :sente-test start-count :handler :routing-callback :data}, :order [:lobby :game :game-test :load-test :sente-test :id :game-lobby :not-found :handler :rum/class :route-match :data :routing-callback :handlers :history :started :start-count :stop-count routing-callback history route-match handlers started start-count stop-count]}, :doc nil}