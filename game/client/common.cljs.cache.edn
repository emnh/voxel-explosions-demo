;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros}, :excludes #{}, :name game.client.common, :imports nil, :requires {game.client.config game.client.config, pprint cljs.pprint, math game.client.math, p promesa.core, promesa.core promesa.core, rum.core rum.core, rum rum.core, game.client.math game.client.math, config game.client.config, cljs.pprint cljs.pprint, com.stuartsierra.component com.stuartsierra.component, component com.stuartsierra.component}, :uses nil, :defs {new-lc {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/common.cljs", :line 33, :column 7, :end-line 33, :end-column 13, :arglists (quote ([data]))}, :name game.client.common/new-lc, :variadic false, :file "src.client/game/client/common.cljs", :end-column 13, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, data {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/common.cljs", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([component]))}, :name game.client.common/data, :variadic false, :file "src.client/game/client/common.cljs", :end-column 11, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, game-time {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/common.cljs", :line 82, :column 7, :end-line 82, :end-column 16, :arglists (quote ([]))}, :name game.client.common/game-time, :variadic false, :file "src.client/game/client/common.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, JSObj {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.common/JSObj, :file "src.client/game/client/common.cljs", :end-column 17, :type true, :column 12, :internal-ctor true, :line 13, :record true, :end-line 13, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->JSObj {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/common.cljs", :line 13, :column 12, :end-line 13, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([initializer data]))}, :name game.client.common/->JSObj, :variadic false, :file "src.client/game/client/common.cljs", :end-column 17, :method-params ([initializer data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([initializer data]))}, map->JSObj {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/common.cljs", :line 13, :column 12, :end-line 13, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__10779]))}, :name game.client.common/map->JSObj, :variadic false, :file "src.client/game/client/common.cljs", :end-column 17, :method-params ([G__10779]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__10779]))}, map->LCObj {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/common.cljs", :line 28, :column 12, :end-line 28, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__10787]))}, :name game.client.common/map->LCObj, :variadic false, :file "src.client/game/client/common.cljs", :end-column 17, :method-params ([G__10787]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__10787]))}, promise-obj {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/common.cljs", :line 52, :column 7, :end-line 52, :end-column 18, :arglists (quote ([]))}, :name game.client.common/promise-obj, :variadic false, :file "src.client/game/client/common.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, header {:name game.client.common/header, :arglists (quote ([h])), :meta {:file nil, :arglists (quote ([h]))}, :doc "", :file "src.client/game/client/common.cljs", :line 47, :column 1}, ->LCObj {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/common.cljs", :line 28, :column 12, :end-line 28, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([data]))}, :name game.client.common/->LCObj, :variadic false, :file "src.client/game/client/common.cljs", :end-column 17, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, list-item {:name game.client.common/list-item, :arglists (quote ([content & [attrs]])), :meta {:file nil, :arglists (quote ([content & [attrs]]))}, :doc "", :file "src.client/game/client/common.cljs", :line 39, :column 1}, LCObj {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.common/LCObj, :file "src.client/game/client/common.cljs", :end-column 17, :type true, :column 12, :internal-ctor true, :line 28, :record true, :end-line 28, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, unique-id {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/common.cljs", :line 65, :column 7, :end-line 65, :end-column 16, :arglists (quote ([] [element])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [element]), :arglists ([] [element]), :arglists-meta (nil nil)}}, :name game.client.common/unique-id, :variadic false, :file "src.client/game/client/common.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [element]), :arglists ([] [element]), :arglists-meta (nil nil)}, :method-params ([] [element]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists ([] [element])}, new-jsobj {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/common.cljs", :line 25, :column 7, :end-line 25, :end-column 16, :arglists (quote ([initializer]))}, :name game.client.common/new-jsobj, :variadic false, :file "src.client/game/client/common.cljs", :end-column 16, :method-params ([initializer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([initializer]))}}, :require-macros {macros game.shared.macros, game.shared.macros game.shared.macros, pprint cljs.pprint, cljs.pprint cljs.pprint, rum rum.core, rum.core rum.core}, :cljs.analyzer/constants {:seen #{initializer :rum/class data :resolve :reject :initializer :data}, :order [:initializer :data initializer data :rum/class :resolve :reject]}, :doc nil}