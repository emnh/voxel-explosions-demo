;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros}, :excludes #{}, :name game.client.engine, :imports nil, :requires {voxelize game.client.voxelize, pprint cljs.pprint, math game.client.math, p promesa.core, promesa.core promesa.core, scene game.client.scene, game.client.ground-local game.client.ground-local, ground game.client.ground-local, game.client.math game.client.math, game.client.scene game.client.scene, m cats.core, cats.core cats.core, cljs.pprint cljs.pprint, com.stuartsierra.component com.stuartsierra.component, component com.stuartsierra.component, game.client.common game.client.common, worker-state game.worker.state, common game.client.common, game.client.voxelize game.client.voxelize, game.worker.state game.worker.state}, :uses {data game.client.common, list-item game.client.common, unique-id game.client.common, new-jsobj game.client.common}, :defs {get-unit-mesh {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 37, :column 3, :end-line 37, :end-column 16, :arglists (quote ([unit]))}, :name game.client.engine/get-unit-mesh, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 16, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit]))}, get-unit-star {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 52, :column 3, :end-line 52, :end-column 16, :arglists (quote ([unit]))}, :name game.client.engine/get-unit-star, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 16, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit]))}, map-units {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 86, :column 7, :end-line 86, :end-column 16, :arglists (quote ([units-component f]))}, :name game.client.engine/map-units, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 16, :method-params ([units-component f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([units-component f]))}, get-units {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 67, :column 3, :end-line 67, :end-column 12, :arglists (quote ([units]))}, :name game.client.engine/get-units, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 12, :method-params ([units]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([units]))}, for-each-unit {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 71, :column 7, :end-line 71, :end-column 20, :arglists (quote ([units-component f]))}, :name game.client.engine/for-each-unit, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 20, :method-params ([units-component f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([units-component f]))}, map->new-test-units-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__25334])), :file nil}, :name game.client.engine/map->new-test-units-Record, :variadic false, :file "src.client/game/client/engine.cljs", :method-params ([G__25334]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 254, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25334]))}, get-current-state {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 99, :column 3, :end-line 99, :end-column 20, :arglists (quote ([component]))}, :name game.client.engine/get-current-state, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 20, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, on-worker-message {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 202, :column 7, :end-line 202, :end-column 24, :arglists (quote ([component message]))}, :name game.client.engine/on-worker-message, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 24, :method-params ([component message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component message]))}, get-screenbox-for-mesh {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 18, :column 3, :end-line 18, :end-column 25, :arglists (quote ([component mesh]))}, :name game.client.engine/get-screenbox-for-mesh, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 25, :method-params ([component mesh]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component mesh]))}, map->new-engine-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__25325])), :file nil}, :name game.client.engine/map->new-engine-Record, :variadic false, :file "src.client/game/client/engine.cljs", :method-params ([G__25325]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 222, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25325]))}, get-unit-regular-mesh {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 42, :column 3, :end-line 42, :end-column 24, :arglists (quote ([unit]))}, :name game.client.engine/get-unit-regular-mesh, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 24, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit]))}, new-test-units {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 255, :column 3, :end-line 255, :end-column 17, :arglists (quote ([]))}, :name game.client.engine/new-test-units, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 254, :end-line 255, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-unit-group {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 57, :column 3, :end-line 57, :end-column 17, :arglists (quote ([unit]))}, :name game.client.engine/get-unit-group, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 17, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit]))}, ->new-test-units-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([ground scene init-scene resources magic explosion starting units mesh-to-screenbox-map mesh-to-unit-map started start-count stop-count])), :file nil}, :name game.client.engine/->new-test-units-Record, :variadic false, :file "src.client/game/client/engine.cljs", :method-params ([ground scene init-scene resources magic explosion starting units mesh-to-screenbox-map mesh-to-unit-map started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 254, :max-fixed-arity 13, :fn-var true, :arglists (quote ([ground scene init-scene resources magic explosion starting units mesh-to-screenbox-map mesh-to-unit-map started start-count stop-count]))}, get-unit-position {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 62, :column 3, :end-line 62, :end-column 20, :arglists (quote ([unit]))}, :name game.client.engine/get-unit-position, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 20, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit]))}, new-engine {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 223, :column 3, :end-line 223, :end-column 13, :arglists (quote ([]))}, :name game.client.engine/new-engine, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 223, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-unit-explosion {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 32, :column 3, :end-line 32, :end-column 21, :arglists (quote ([unit]))}, :name game.client.engine/get-unit-explosion, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 21, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit]))}, -on-worker-message {:name game.client.engine/-on-worker-message, :file "src.client/game/client/engine.cljs", :line 122, :column 1, :end-line 122, :end-column 29, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 122, :column 11, :end-line 122, :end-column 29}}, new-test-units-Record {:num-fields 13, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.engine/new-test-units-Record, :file "src.client/game/client/engine.cljs", :type true, :column 1, :internal-ctor true, :line 254, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, poll-state {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 212, :column 7, :end-line 212, :end-column 17, :arglists (quote ([component]))}, :name game.client.engine/poll-state, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, ->new-engine-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([scene-properties camera units engine-stats ground state worker polling started start-count stop-count])), :file nil}, :name game.client.engine/->new-engine-Record, :variadic false, :file "src.client/game/client/engine.cljs", :method-params ([scene-properties camera units engine-stats ground state worker polling started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 222, :max-fixed-arity 11, :fn-var true, :arglists (quote ([scene-properties camera units engine-stats ground state worker polling started start-count stop-count]))}, get-unit-for-mesh {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 25, :column 3, :end-line 25, :end-column 20, :arglists (quote ([component mesh]))}, :name game.client.engine/get-unit-for-mesh, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 20, :method-params ([component mesh]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component mesh]))}, get-unit-build-mesh {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/engine.cljs", :line 47, :column 3, :end-line 47, :end-column 22, :arglists (quote ([unit]))}, :name game.client.engine/get-unit-build-mesh, :variadic false, :file "src.client/game/client/engine.cljs", :end-column 22, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit]))}, new-engine-Record {:num-fields 11, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.engine/new-engine-Record, :file "src.client/game/client/engine.cljs", :type true, :column 1, :internal-ctor true, :line 222, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}}, :require-macros {macros game.shared.macros, game.shared.macros game.shared.macros, pprint cljs.pprint, cljs.pprint cljs.pprint, m cats.core, cats.core cats.core}, :cljs.analyzer/constants {:seen #{:started :mesh-to-screenbox-map units :resource-list mesh-to-unit-map init-scene :y-faces :aspect resources :explosion-mesh worker :map-dict :group :scene-properties :index :starting :polling explosion :ground scene :stop-count started mesh-to-screenbox-map :height-field :default :regular-mesh :engine-stats :loaded :load-promise :width scene-properties :update ground :state :state-buffer :max-health polling starting :geometry stop-count :fov :stars-mesh :display-mesh engine-stats :magic :matrix :add-time state :start-count :material :camera :x-faces :health magic :near :standard-material :units :unit-count :far :mesh-to-unit-map :init-scene :hierarchy :resources start-count :texture-load-promise :build-mesh :magic-material :keywordize-keys :worker :voxels-load-promise :buffer camera :height :scene :model :explosion}, :order [:mesh-to-screenbox-map :mesh-to-unit-map :explosion-mesh :scene :display-mesh :regular-mesh :build-mesh :stars-mesh :group :units :unit-count :buffer :hierarchy :default :loaded :worker :camera :scene-properties :ground :height-field :width :height :x-faces :y-faces :matrix :fov :aspect :near :far :state-buffer :map-dict :update :engine-stats :keywordize-keys :polling :state :started :start-count :stop-count scene-properties camera units engine-stats ground state worker polling started start-count stop-count :init-scene :resources :magic :explosion :starting :resource-list :load-promise :texture-load-promise :voxels-load-promise :standard-material :geometry :magic-material :material :index :model :health :add-time :max-health scene init-scene resources magic explosion starting mesh-to-screenbox-map mesh-to-unit-map]}, :doc nil}