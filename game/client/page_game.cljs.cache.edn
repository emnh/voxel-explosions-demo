;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros, html sablono.core}, :excludes #{}, :name game.client.page-game, :imports nil, :requires {game.client.config game.client.config, pprint cljs.pprint, p promesa.core, promesa.core promesa.core, routing game.client.routing, jayq jayq.core, scene game.client.scene, game.client.routing game.client.routing, game.client.ground-local game.client.ground-local, game.shared.state game.shared.state, rum.core rum.core, rum rum.core, ground-local game.client.ground-local, game.client.scene game.client.scene, config game.client.config, game game.client.game, game.client.renderer game.client.renderer, sablono.core sablono.core, sablono sablono.core, m cats.core, cats.core cats.core, jayq.core jayq.core, cljs.pprint cljs.pprint, com.stuartsierra.component com.stuartsierra.component, controls game.client.controls, state game.shared.state, component com.stuartsierra.component, string clojure.string, renderer game.client.renderer, game.client.common game.client.common, game.client.game game.client.game, common game.client.common, clojure.string clojure.string, game.client.controls game.client.controls}, :uses {with-simple-cause game.shared.state, join clojure.string, data game.client.common, $ jayq.core, list-item game.client.common, new-jsobj game.client.common}, :defs {start {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/page_game.cljs", :line 24, :column 7, :end-line 24, :end-column 12, :arglists (quote ([component]))}, :name game.client.page-game/start, :variadic false, :file "src.client/game/client/page_game.cljs", :end-column 12, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, stop {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/page_game.cljs", :line 44, :column 7, :end-line 44, :end-column 11, :arglists (quote ([component]))}, :name game.client.page-game/stop, :variadic false, :file "src.client/game/client/page_game.cljs", :end-column 11, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, new-game-Record {:num-fields 6, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.page-game/new-game-Record, :file "src.client/game/client/page_game.cljs", :type true, :column 1, :internal-ctor true, :line 55, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->new-game-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([simplex routing subsystem started start-count stop-count])), :file nil}, :name game.client.page-game/->new-game-Record, :variadic false, :file "src.client/game/client/page_game.cljs", :method-params ([simplex routing subsystem started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 55, :max-fixed-arity 6, :fn-var true, :arglists (quote ([simplex routing subsystem started start-count stop-count]))}, map->new-game-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__25826])), :file nil}, :name game.client.page-game/map->new-game-Record, :variadic false, :file "src.client/game/client/page_game.cljs", :method-params ([G__25826]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25826]))}, new-game {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/page_game.cljs", :line 56, :column 3, :end-line 56, :end-column 11, :arglists (quote ([]))}, :name game.client.page-game/new-game, :variadic false, :file "src.client/game/client/page_game.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {pprint cljs.pprint, rum.core rum.core, game.shared.macros game.shared.macros, rum rum.core, macros game.shared.macros, sablono.core sablono.core, sablono sablono.core, m cats.core, cats.core cats.core, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:started routing :stop-count started :params stop-count :simplex :start-count simplex :subsystem start-count subsystem :routing :$page}, :order [:$page :simplex :subsystem :params :routing :started :start-count :stop-count simplex routing subsystem started start-count stop-count]}, :doc nil}