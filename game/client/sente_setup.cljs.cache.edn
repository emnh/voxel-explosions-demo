;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros, html sablono.core}, :excludes #{}, :name game.client.sente-setup, :imports nil, :requires {sente taoensso.sente, pprint cljs.pprint, p promesa.core, promesa.core promesa.core, routing game.client.routing, jayq jayq.core, game.client.routing game.client.routing, rum.core rum.core, rum rum.core, sablono.core sablono.core, sablono sablono.core, m cats.core, cats.core cats.core, jayq.core jayq.core, cljs.pprint cljs.pprint, com.stuartsierra.component com.stuartsierra.component, taoensso.sente taoensso.sente, component com.stuartsierra.component, string clojure.string, encore taoensso.encore, game.client.common game.client.common, common game.client.common, clojure.string clojure.string, taoensso.encore taoensso.encore}, :uses {join clojure.string, promise-obj game.client.common, $ jayq.core, header game.client.common, list-item game.client.common, cb-success? taoensso.sente}, :defs {-event-msg-handler {:name game.client.sente-setup/-event-msg-handler, :file "src.client/game/client/sente_setup.cljs", :line 29, :column 1, :end-line 29, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s", :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/sente_setup.cljs", :line 29, :column 11, :end-line 29, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s"}}, ->new-sente-setup-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([config chsk ch-recv send-fn state router event-handlers connected-promise started start-count stop-count])), :file nil}, :name game.client.sente-setup/->new-sente-setup-Record, :variadic false, :file "src.client/game/client/sente_setup.cljs", :method-params ([config chsk ch-recv send-fn state router event-handlers connected-promise started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 108, :max-fixed-arity 11, :fn-var true, :arglists (quote ([config chsk ch-recv send-fn state router event-handlers connected-promise started start-count stop-count]))}, new-sente-setup-Record {:num-fields 11, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.sente-setup/new-sente-setup-Record, :file "src.client/game/client/sente_setup.cljs", :type true, :column 1, :internal-ctor true, :line 108, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, event-msg-handler {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/sente_setup.cljs", :line 34, :column 7, :end-line 34, :end-column 24, :arglists (quote ([component {:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, :name game.client.sente-setup/event-msg-handler, :variadic false, :file "src.client/game/client/sente_setup.cljs", :end-column 24, :method-params ([component p__23699]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component {:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, send-cb {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/sente_setup.cljs", :line 88, :column 3, :end-line 88, :end-column 10, :arglists (quote ([component event data] [component event data timeout])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([component event data] [component event data timeout]), :arglists ([component event data] [component event data timeout]), :arglists-meta (nil nil)}}, :name game.client.sente-setup/send-cb, :variadic false, :file "src.client/game/client/sente_setup.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([component event data] [component event data timeout]), :arglists ([component event data] [component event data timeout]), :arglists-meta (nil nil)}, :method-params ([component event data] [component event data timeout]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 88, :max-fixed-arity 4, :fn-var true, :arglists ([component event data] [component event data timeout])}, ->output! {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/sente_setup.cljs", :line 22, :column 3, :end-line 22, :end-column 12, :arglists (quote ([fmt & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}}, :name game.client.sente-setup/->output!, :variadic true, :file "src.client/game/client/sente_setup.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}, :method-params [(fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & args])}, map->new-sente-setup-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__23728])), :file nil}, :name game.client.sente-setup/map->new-sente-setup-Record, :variadic false, :file "src.client/game/client/sente_setup.cljs", :method-params ([G__23728]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__23728]))}, new-sente-setup {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/sente_setup.cljs", :line 109, :column 3, :end-line 109, :end-column 18, :arglists (quote ([]))}, :name game.client.sente-setup/new-sente-setup, :variadic false, :file "src.client/game/client/sente_setup.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 109, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, send {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/sente_setup.cljs", :line 81, :column 3, :end-line 81, :end-column 7, :arglists (quote ([component event ?data]))}, :name game.client.sente-setup/send, :variadic false, :file "src.client/game/client/sente_setup.cljs", :end-column 7, :method-params ([component event ?data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 81, :max-fixed-arity 3, :fn-var true, :arglists (quote ([component event ?data]))}, register-handler {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/sente_setup.cljs", :line 73, :column 3, :end-line 73, :end-column 19, :arglists (quote ([component event handler]))}, :name game.client.sente-setup/register-handler, :variadic false, :file "src.client/game/client/sente_setup.cljs", :end-column 19, :method-params ([component event handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 73, :max-fixed-arity 3, :fn-var true, :arglists (quote ([component event handler]))}}, :require-macros {pprint cljs.pprint, rum.core rum.core, game.shared.macros game.shared.macros, rum rum.core, macros game.shared.macros, sablono.core sablono.core, sablono sablono.core, m cats.core, cats.core cats.core, cljs.pprint cljs.pprint, encore taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{send-fn :event-handlers :started :connected-promise :first-open? :chsk/recv :ch-recv :router :stop-count started connected-promise :config event-handlers :default :packer ch-recv :type :chsk/state router :state :rts/subscribe stop-count config :request-timeout :event :connection-timeout :id state :start-count :edn :chsk/timeout :?data :chsk :send-fn :sente :hierarchy start-count :auto :chsk/handshake chsk}, :order [:hierarchy :id :default :?data :event :event-handlers :chsk/state :first-open? :connected-promise :chsk/recv :chsk/handshake :send-fn :rts/subscribe :config :sente :request-timeout :chsk/timeout :chsk :ch-recv :state :router :started :start-count :stop-count :type :packer :auto :edn :connection-timeout config chsk ch-recv send-fn state router event-handlers connected-promise started start-count stop-count]}, :doc nil}