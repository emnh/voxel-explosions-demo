;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros}, :excludes #{}, :name game.client.resources, :imports nil, :requires {voxelize game.client.voxelize, game.client.config game.client.config, pprint cljs.pprint, game.client.models game.client.models, math game.client.math, p promesa.core, promesa.core promesa.core, game.client.math game.client.math, config game.client.config, game.client.progress-manager game.client.progress-manager, progress-manager game.client.progress-manager, cljs.pprint cljs.pprint, com.stuartsierra.component com.stuartsierra.component, component com.stuartsierra.component, string clojure.string, models game.client.models, clojure.string clojure.string, game.client.voxelize game.client.voxelize}, :uses {transform-geometry game.client.models, post-transform-geometry game.client.models, pi game.client.math, replace clojure.string, update-progress-item game.client.progress-manager}, :defs {load-resource {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/resources.cljs", :line 19, :column 3, :end-line 19, :end-column 16, :arglists (quote ([path on-success on-progress on-error]))}, :name game.client.resources/load-resource, :variadic false, :file "src.client/game/client/resources.cljs", :end-column 16, :method-params ([path on-success on-progress on-error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 19, :max-fixed-arity 4, :fn-var true, :arglists (quote ([path on-success on-progress on-error]))}, load-texture {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/resources.cljs", :line 32, :column 7, :end-line 32, :end-column 19, :arglists (quote ([model path on-progress]))}, :name game.client.resources/load-texture, :variadic false, :file "src.client/game/client/resources.cljs", :end-column 19, :method-params ([model path on-progress]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 3, :fn-var true, :arglists (quote ([model path on-progress]))}, load-voxels {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/resources.cljs", :line 61, :column 7, :end-line 61, :end-column 18, :arglists (quote ([model path on-progress]))}, :name game.client.resources/load-voxels, :variadic false, :file "src.client/game/client/resources.cljs", :end-column 18, :method-params ([model path on-progress]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 3, :fn-var true, :arglists (quote ([model path on-progress]))}, load-geometry {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/resources.cljs", :line 89, :column 7, :end-line 89, :end-column 20, :arglists (quote ([model path on-progress]))}, :name game.client.resources/load-geometry, :variadic false, :file "src.client/game/client/resources.cljs", :end-column 20, :method-params ([model path on-progress]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([model path on-progress]))}, on-progress {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/resources.cljs", :line 124, :column 7, :end-line 124, :end-column 18, :arglists (quote ([progress-manager resource xhr]))}, :name game.client.resources/on-progress, :variadic false, :file "src.client/game/client/resources.cljs", :end-column 18, :method-params ([progress-manager resource xhr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 3, :fn-var true, :arglists (quote ([progress-manager resource xhr]))}, new-resources-Record {:num-fields 6, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.resources/new-resources-Record, :file "src.client/game/client/resources.cljs", :type true, :column 1, :internal-ctor true, :line 132, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->new-resources-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([progress-manager resource-list all-promise started start-count stop-count])), :file nil}, :name game.client.resources/->new-resources-Record, :variadic false, :file "src.client/game/client/resources.cljs", :method-params ([progress-manager resource-list all-promise started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 132, :max-fixed-arity 6, :fn-var true, :arglists (quote ([progress-manager resource-list all-promise started start-count stop-count]))}, map->new-resources-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__27865])), :file nil}, :name game.client.resources/map->new-resources-Record, :variadic false, :file "src.client/game/client/resources.cljs", :method-params ([G__27865]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__27865]))}, new-resources {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/resources.cljs", :line 133, :column 3, :end-line 133, :end-column 16, :arglists (quote ([]))}, :name game.client.resources/new-resources, :variadic false, :file "src.client/game/client/resources.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 133, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {macros game.shared.macros, game.shared.macros game.shared.macros, pprint cljs.pprint, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:started :path :resource-list all-promise :stop-count started resource-list :progress-manager :load-promise :geometry stop-count :voxels-path progress-manager :texture-repeat :start-count :all-promise start-count :texture-load-promise :keywordize-keys :voxels-load-promise :texture-path}, :order [:texture-repeat :keywordize-keys :geometry :progress-manager :resource-list :all-promise :started :start-count :stop-count :path :texture-path :voxels-path :load-promise :texture-load-promise :voxels-load-promise progress-manager resource-list all-promise started start-count stop-count]}, :doc nil}