;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros, infix infix.macros}, :excludes #{remove}, :name game.client.scene, :imports nil, :requires {game.client.config game.client.config, pprint cljs.pprint, jayq jayq.core, config game.client.config, jayq.core jayq.core, cljs.pprint cljs.pprint, com.stuartsierra.component com.stuartsierra.component, component com.stuartsierra.component, game.client.common game.client.common, common game.client.common}, :uses {data game.client.common, $ jayq.core}, :defs {get-view-element {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 265, :column 7, :end-line 265, :end-column 23, :arglists (quote ([renderer]))}, :name game.client.scene/get-view-element, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 23, :method-params ([renderer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 1, :fn-var true, :arglists (quote ([renderer]))}, add {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 135, :column 7, :end-line 135, :end-column 10, :arglists (quote ([scene item]))}, :name game.client.scene/add, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 10, :method-params ([scene item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scene item]))}, ->new-init-scene-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([params renderer $overlay camera scene config ground init-stats done started start-count stop-count])), :file nil}, :name game.client.scene/->new-init-scene-Record, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :method-params ([params renderer $overlay camera scene config ground init-stats done started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 149, :max-fixed-arity 12, :fn-var true, :arglists (quote ([params renderer $overlay camera scene config ground init-stats done started start-count stop-count]))}, world-to-screen {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 281, :column 7, :end-line 281, :end-column 22, :arglists (quote ([width height camera pos]))}, :name game.client.scene/world-to-screen, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 22, :method-params ([width height camera pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 4, :fn-var true, :arglists (quote ([width height camera pos]))}, map->new-init-stats-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__12160])), :file nil}, :name game.client.scene/map->new-init-stats-Record, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :method-params ([G__12160]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__12160]))}, world-to-screen-fast {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 292, :column 7, :end-line 292, :end-column 27, :arglists (quote ([width height matrix pos]))}, :name game.client.scene/world-to-screen-fast, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 27, :method-params ([width height matrix pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 292, :end-line 292, :max-fixed-arity 4, :fn-var true, :arglists (quote ([width height matrix pos]))}, on-resize {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([component event]))}, :name game.client.scene/on-resize, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 16, :method-params ([component event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component event]))}, new-init-light {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 259, :column 7, :end-line 259, :end-column 21, :arglists (quote ([]))}, :name game.client.scene/new-init-light, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 259, :end-line 259, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, new-init-stats-Record {:num-fields 6, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.scene/new-init-stats-Record, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :type true, :column 1, :internal-ctor true, :line 99, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->new-scene-properties-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__12142])), :file nil}, :name game.client.scene/map->new-scene-properties-Record, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :method-params ([G__12142]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__12142]))}, map->InitLight {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 202, :column 12, :end-line 202, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__12190]))}, :name game.client.scene/map->InitLight, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 21, :method-params ([G__12190]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 202, :end-line 202, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__12190]))}, new-scene-properties {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 19, :column 3, :end-line 19, :end-column 23, :arglists (quote ([]))}, :name game.client.scene/new-scene-properties, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, remove {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 139, :column 7, :end-line 139, :end-column 13, :arglists (quote ([scene item]))}, :name game.client.scene/remove, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 13, :method-params ([scene item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 2, :fn-var true, :arglists (quote ([scene item]))}, new-init-scene {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 150, :column 3, :end-line 150, :end-column 17, :arglists (quote ([]))}, :name game.client.scene/new-init-scene, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 150, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->new-on-resize-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__12151])), :file nil}, :name game.client.scene/map->new-on-resize-Record, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :method-params ([G__12151]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__12151]))}, ->new-init-stats-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([params render-stats engine-stats started start-count stop-count])), :file nil}, :name game.client.scene/->new-init-stats-Record, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :method-params ([params render-stats engine-stats started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 99, :max-fixed-arity 6, :fn-var true, :arglists (quote ([params render-stats engine-stats started start-count stop-count]))}, InitLight {:num-fields 6, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.scene/InitLight, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 21, :type true, :column 12, :internal-ctor true, :line 202, :record true, :end-line 202, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, get-camera {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 190, :column 7, :end-line 190, :end-column 17, :arglists (quote ([]))}, :name game.client.scene/get-camera, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ->new-scene-properties-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([width height started start-count stop-count])), :file nil}, :name game.client.scene/->new-scene-properties-Record, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :method-params ([width height started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 18, :max-fixed-arity 5, :fn-var true, :arglists (quote ([width height started start-count stop-count]))}, new-on-resize-Record {:num-fields 13, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.scene/new-on-resize-Record, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :type true, :column 1, :internal-ctor true, :line 84, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, new-on-resize {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 85, :column 3, :end-line 85, :end-column 16, :arglists (quote ([]))}, :name game.client.scene/new-on-resize, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 85, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop-scene {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 143, :column 7, :end-line 143, :end-column 17, :arglists (quote ([component]))}, :name game.client.scene/stop-scene, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, new-scene-properties-Record {:num-fields 5, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.scene/new-scene-properties-Record, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :type true, :column 1, :internal-ctor true, :line 18, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, page-class {:name game.client.scene/page-class, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 16, :column 1, :end-line 16, :end-column 16, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 16, :column 6, :end-line 16, :end-column 16}}, get-camera-focus {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 270, :column 7, :end-line 270, :end-column 23, :arglists (quote ([camera x y]))}, :name game.client.scene/get-camera-focus, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 23, :method-params ([camera x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 3, :fn-var true, :arglists (quote ([camera x y]))}, new-init-scene-Record {:num-fields 12, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.scene/new-init-scene-Record, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :type true, :column 1, :internal-ctor true, :line 149, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, new-init-stats {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 100, :column 3, :end-line 100, :end-column 17, :arglists (quote ([]))}, :name game.client.scene/new-init-stats, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 100, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->new-init-scene-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__12172])), :file nil}, :name game.client.scene/map->new-init-scene-Record, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :method-params ([G__12172]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__12172]))}, ->new-on-resize-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([config scene camera renderer params $overlay init-scene pixi-overlay scene-properties three-overlay started start-count stop-count])), :file nil}, :name game.client.scene/->new-on-resize-Record, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :method-params ([config scene camera renderer params $overlay init-scene pixi-overlay scene-properties three-overlay started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 84, :max-fixed-arity 13, :fn-var true, :arglists (quote ([config scene camera renderer params $overlay init-scene pixi-overlay scene-properties three-overlay started start-count stop-count]))}, ->InitLight {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :line 202, :column 12, :end-line 202, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([config scene light1 light2 light3 light4]))}, :name game.client.scene/->InitLight, :variadic false, :file "/home/emh/public_html/github/rts/src.client/game/client/scene.cljs", :end-column 21, :method-params ([config scene light1 light2 light3 light4]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 202, :end-line 202, :max-fixed-arity 6, :fn-var true, :arglists (quote ([config scene light1 light2 light3 light4]))}}, :require-macros {infix.macros infix.macros, macros game.shared.macros, game.shared.macros game.shared.macros, pprint cljs.pprint, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:started three-overlay init-scene :light3 light1 :done :scene-properties height :init-stats :ground $overlay scene :stop-count started :config :top light3 :engine-stats :render-stats done :width scene-properties :params init-stats :controls ground stop-count config :renderer :pixi-overlay engine-stats render-stats params width :z-index :mesh :light4 :light2 :start-count pixi-overlay renderer :camera :origin :three-overlay :init-scene start-count light4 light2 :light1 camera :height :$page :$overlay :scene :pixi-renderer}, :order [:width :height :started :start-count :stop-count width height started start-count stop-count :config :params :$page :renderer :scene :camera :pixi-overlay :pixi-renderer :scene-properties :$overlay :init-scene :three-overlay config scene camera renderer params $overlay init-scene pixi-overlay scene-properties three-overlay :render-stats :engine-stats :top :z-index render-stats engine-stats :done :ground :init-stats :controls :origin :mesh ground init-stats done :light1 :light2 :light3 :light4 light1 light2 light3 light4]}, :doc nil}