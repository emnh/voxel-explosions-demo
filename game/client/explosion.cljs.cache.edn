;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros, infix infix.macros}, :excludes #{}, :name game.client.explosion, :imports nil, :requires {engine game.client.engine, pprint cljs.pprint, math game.client.math, p promesa.core, promesa.core promesa.core, game.client.math game.client.math, m cats.core, cats.core cats.core, cljs.pprint cljs.pprint, com.stuartsierra.component com.stuartsierra.component, component com.stuartsierra.component, game.client.common game.client.common, common game.client.common, game.client.engine game.client.engine}, :uses {data game.client.common}, :defs {map->new-explosion-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__25802])), :file nil}, :name game.client.explosion/map->new-explosion-Record, :variadic false, :file "src.client/game/client/explosion.cljs", :method-params ([G__25802]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25802]))}, new-explosion {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/explosion.cljs", :line 207, :column 3, :end-line 207, :end-column 16, :arglists (quote ([]))}, :name game.client.explosion/new-explosion, :variadic false, :file "src.client/game/client/explosion.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 207, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, new-explosion-Record {:num-fields 7, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.explosion/new-explosion-Record, :file "src.client/game/client/explosion.cljs", :type true, :column 1, :internal-ctor true, :line 206, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, fragment-shader {:name game.client.explosion/fragment-shader, :file "src.client/game/client/explosion.cljs", :line 174, :column 1, :end-line 174, :end-column 21, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/explosion.cljs", :line 174, :column 6, :end-line 174, :end-column 21}}, new-update-explosion-Record {:num-fields 5, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.explosion/new-update-explosion-Record, :file "src.client/game/client/explosion.cljs", :type true, :column 1, :internal-ctor true, :line 44, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->new-update-explosion-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([units explosion started start-count stop-count])), :file nil}, :name game.client.explosion/->new-update-explosion-Record, :variadic false, :file "src.client/game/client/explosion.cljs", :method-params ([units explosion started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 44, :max-fixed-arity 5, :fn-var true, :arglists (quote ([units explosion started start-count stop-count]))}, map->new-update-explosion-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__25793])), :file nil}, :name game.client.explosion/map->new-update-explosion-Record, :variadic false, :file "src.client/game/client/explosion.cljs", :method-params ([G__25793]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25793]))}, vertex-shader {:name game.client.explosion/vertex-shader, :file "src.client/game/client/explosion.cljs", :line 53, :column 1, :end-line 53, :end-column 19, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/explosion.cljs", :line 53, :column 6, :end-line 53, :end-column 19}}, on-render {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/explosion.cljs", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([init-renderer component]))}, :name game.client.explosion/on-render, :variadic false, :file "src.client/game/client/explosion.cljs", :end-column 16, :method-params ([init-renderer component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([init-renderer component]))}, ->new-explosion-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([light1 ground start-time material started start-count stop-count])), :file nil}, :name game.client.explosion/->new-explosion-Record, :variadic false, :file "src.client/game/client/explosion.cljs", :method-params ([light1 ground start-time material started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 206, :max-fixed-arity 7, :fn-var true, :arglists (quote ([light1 ground start-time material started start-count stop-count]))}, new-update-explosion {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/explosion.cljs", :line 45, :column 3, :end-line 45, :end-column 23, :arglists (quote ([]))}, :name game.client.explosion/new-update-explosion, :variadic false, :file "src.client/game/client/explosion.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {infix.macros infix.macros, macros game.shared.macros, game.shared.macros game.shared.macros, pprint cljs.pprint, cljs.pprint cljs.pprint, m cats.core, cats.core cats.core}, :cljs.analyzer/constants {:seen #{:started units light1 explosion :ground :stop-count started :start-time :width ground stop-count :data-texture start-time :add-time :start-count :material :units :float-texture-divisor start-count material :light1 :height :explosion}, :order [:units :add-time :explosion :started :start-count :stop-count units explosion started start-count stop-count :light1 :ground :start-time :material :data-texture :width :height :float-texture-divisor light1 ground start-time material]}, :doc nil}