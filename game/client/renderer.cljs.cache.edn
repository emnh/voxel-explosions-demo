;; Analyzed by ClojureScript 1.8.40
{:use-macros {defcom game.shared.macros}, :excludes #{}, :name game.client.renderer, :imports nil, :requires {game.client.config game.client.config, pprint cljs.pprint, game.client.magic game.client.magic, jayq jayq.core, explosion game.client.explosion, config game.client.config, game.client.overlay game.client.overlay, jayq.core jayq.core, cljs.pprint cljs.pprint, game.client.explosion game.client.explosion, com.stuartsierra.component com.stuartsierra.component, component com.stuartsierra.component, magic game.client.magic, game.client.common game.client.common, common game.client.common, overlay game.client.overlay}, :uses {data game.client.common, $ jayq.core}, :defs {render-loop {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/renderer.cljs", :line 15, :column 7, :end-line 15, :end-column 18, :arglists (quote ([component]))}, :name game.client.renderer/render-loop, :variadic false, :file "src.client/game/client/renderer.cljs", :end-column 18, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, new-init-renderer-Record {:num-fields 14, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.renderer/new-init-renderer-Record, :file "src.client/game/client/renderer.cljs", :type true, :column 1, :internal-ctor true, :line 41, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->new-init-renderer-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([renderer three-overlay camera scene render-stats pixi-overlay update-magic update-explosion running last-frame-time last-frame-elapsed started start-count stop-count])), :file nil}, :name game.client.renderer/->new-init-renderer-Record, :variadic false, :file "src.client/game/client/renderer.cljs", :method-params ([renderer three-overlay camera scene render-stats pixi-overlay update-magic update-explosion running last-frame-time last-frame-elapsed started start-count stop-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 41, :max-fixed-arity 14, :fn-var true, :arglists (quote ([renderer three-overlay camera scene render-stats pixi-overlay update-magic update-explosion running last-frame-time last-frame-elapsed started start-count stop-count]))}, map->new-init-renderer-Record {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__25813])), :file nil}, :name game.client.renderer/map->new-init-renderer-Record, :variadic false, :file "src.client/game/client/renderer.cljs", :method-params ([G__25813]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25813]))}, new-init-renderer {:protocol-inline nil, :meta {:file "/home/emh/public_html/github/rts/src.client/game/client/renderer.cljs", :line 42, :column 3, :end-line 42, :end-column 20, :arglists (quote ([]))}, :name game.client.renderer/new-init-renderer, :variadic false, :file "src.client/game/client/renderer.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {macros game.shared.macros, game.shared.macros game.shared.macros, pprint cljs.pprint, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{last-frame-time :started three-overlay :overlay-renderer :update-explosion :stage scene :stop-count started :render-stats :last-frame-elapsed update-explosion stop-count :renderer :running :pixi-overlay :update-magic render-stats last-frame-elapsed :start-count running pixi-overlay update-magic renderer :camera :three-overlay :last-frame-time start-count camera :scene :pixi-renderer}, :order [:running :last-frame-time :camera :scene :renderer :three-overlay :overlay-renderer :render-stats :pixi-overlay :pixi-renderer :stage :last-frame-elapsed :update-magic :update-explosion :started :start-count :stop-count renderer three-overlay camera scene render-stats pixi-overlay update-magic update-explosion running last-frame-time last-frame-elapsed started start-count stop-count]}, :doc nil}