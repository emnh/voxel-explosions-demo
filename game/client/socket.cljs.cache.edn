;; Analyzed by ClojureScript 1.8.40
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name game.client.socket, :imports nil, :requires {game.client.config game.client.config, pprint cljs.pprint, p promesa.core, promesa.core promesa.core, jayq jayq.core, cljs.core.async cljs.core.async, config game.client.config, jayq.core jayq.core, cljs.pprint cljs.pprint, com.stuartsierra.component com.stuartsierra.component, component com.stuartsierra.component, game.client.common game.client.common, common game.client.common, clojure.string clojure.string}, :uses {<! cljs.core.async, join clojure.string, chan cljs.core.async, $ jayq.core, put! cljs.core.async}, :defs {InitSocket {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name game.client.socket/InitSocket, :file "src.client/game/client/socket.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 15, :record true, :end-line 15, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->InitSocket {:protocol-inline nil, :meta {:file "/home/emh/github/rts/src.client/game/client/socket.cljs", :line 15, :column 12, :end-line 15, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([socket listeners]))}, :name game.client.socket/->InitSocket, :variadic false, :file "src.client/game/client/socket.cljs", :end-column 22, :method-params ([socket listeners]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([socket listeners]))}, map->InitSocket {:protocol-inline nil, :meta {:file "/home/emh/github/rts/src.client/game/client/socket.cljs", :line 15, :column 12, :end-line 15, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__10159]))}, :name game.client.socket/map->InitSocket, :variadic false, :file "src.client/game/client/socket.cljs", :end-column 22, :method-params ([G__10159]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__10159]))}, new-init-socket {:protocol-inline nil, :meta {:file "/home/emh/github/rts/src.client/game/client/socket.cljs", :line 41, :column 7, :end-line 41, :end-column 22, :arglists (quote ([]))}, :name game.client.socket/new-init-socket, :variadic false, :file "src.client/game/client/socket.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rpc {:protocol-inline nil, :meta {:file "/home/emh/github/rts/src.client/game/client/socket.cljs", :line 50, :column 3, :end-line 50, :end-column 6, :arglists (quote ([socket call & {:as args}])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(socket call {:as args})], :arglists ([socket call & {:as args}]), :arglists-meta (nil)}}, :name game.client.socket/rpc, :variadic true, :file "src.client/game/client/socket.cljs", :end-column 6, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(socket call {:as args})], :arglists ([socket call & {:as args}]), :arglists-meta (nil)}, :method-params [(socket call {:as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 49, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists ([socket call & {:as args}])}, on {:protocol-inline nil, :meta {:file "/home/emh/github/rts/src.client/game/client/socket.cljs", :line 67, :column 3, :end-line 67, :end-column 5, :arglists (quote ([socket event f]))}, :name game.client.socket/on, :variadic false, :file "src.client/game/client/socket.cljs", :end-column 5, :method-params ([socket event f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([socket event f]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, pprint cljs.pprint, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{listeners :socket socket :keywordize-keys :listeners}, :order [:socket :listeners socket listeners :keywordize-keys]}, :doc nil}